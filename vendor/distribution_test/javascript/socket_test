function PM(url, protocols) {
    this.ws = new Socket(this.onopen.bind(this), PM.prototype.incoming_file.bind(this), url, protocols)
    this.pending_files = []
    this.pending = 0
}

PM.prototype.onopen = function(connection) {
    this.connection = connection
}

PM.prototype.get_pending = function() {
    if (!this.connection) {
        alert("Hey jude")
        setTimeout(2000, this.get_pending.bind(this))
    } else
        while (this.pending_files.length) {
            this.pending++
            this.connection.send(this.pending_files.unshift())
        }
    if (this.pending)
        setTimeout(20, PM.prototype.get_pending.bind(this))

}

PM.prototype.incoming_file = function(data) {
    alert("Hey")
    eval.call(null, data)
    this.pending--
}

PM.prototype.require = function(files) {
    this.pending_files.push(arguments)
    this.get_pending()
}


function test() {
    // Write your tests here.
    var p = new PM("ws:localhost:8081")
    p.require("shape")

    var l = new Line()
    alert(l)

}