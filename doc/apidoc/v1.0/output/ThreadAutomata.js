Ext.data.JsonP.ThreadAutomata({"tagname":"class","name":"ThreadAutomata","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-ThreadAutomata","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"ThreadAutomata","meta":{},"id":"method-constructor"},{"name":"run","tagname":"method","owner":"ThreadAutomata","meta":{},"id":"method-run"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":7,"files":[{"filename":"ll_ThreadAutomata.js","href":"ll_ThreadAutomata.html#ThreadAutomata"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":["EventDispatcher"],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/EventDispatcher' rel='EventDispatcher' class='docClass'>EventDispatcher</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_ThreadAutomata.html#ThreadAutomata' target='_blank'>ll_ThreadAutomata.js</a></div></pre><div class='doc-contents'><p>@classDescription Creates an automata for atomic processing.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ThreadAutomata'>ThreadAutomata</span><br/><a href='source/ll_ThreadAutomata.html#ThreadAutomata-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/ThreadAutomata-method-constructor' class='name expandable'>ThreadAutomata</a>( <span class='pre'></span> ) : <a href=\"#!/api/ThreadAutomata\" rel=\"ThreadAutomata\" class=\"docClass\">ThreadAutomata</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/ThreadAutomata\" rel=\"ThreadAutomata\" class=\"docClass\">ThreadAutomata</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ThreadAutomata'>ThreadAutomata</span><br/><a href='source/ll_ThreadAutomata.html#ThreadAutomata-method-run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ThreadAutomata-method-run' class='name expandable'>run</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Calls a function that manages the next activity in function\nfor the state of the object. ...</div><div class='long'><p>Calls a function that manages the next activity in function\nfor the state of the object. It is responsible of state transitions through <a href=\"#!/api/Automata-method-run\" rel=\"Automata-method-run\" class=\"docClass\">Automata.run</a>.\nThe main difference between <a href=\"#!/api/ThreadAutomata-method-run\" rel=\"ThreadAutomata-method-run\" class=\"docClass\">ThreadAutomata.run</a> and <a href=\"#!/api/Automata-method-run\" rel=\"Automata-method-run\" class=\"docClass\">Automata.run</a> lies on\nthe type of the solicitor functions, designed to make atomic operations.</p>\n\n<p>@memberOf {ThreadAutomata}</p>\n</div></div></div></div></div></div></div>"});