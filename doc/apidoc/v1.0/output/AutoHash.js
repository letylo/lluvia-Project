Ext.data.JsonP.AutoHash({"tagname":"class","name":"AutoHash","autodetected":{},"files":[{"filename":"ll_AutoHash.js","href":"ll_AutoHash.html#AutoHash"}],"members":[{"name":"constructor","tagname":"method","owner":"AutoHash","id":"method-constructor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-AutoHash","short_doc":"A Hash with a lazy execution initializer. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ll_AutoHash.html#AutoHash' target='_blank'>ll_AutoHash.js</a></div></pre><div class='doc-contents'><p>A Hash with a lazy execution initializer.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new AutoHash(function(obj, key) { return [] })\na.new_attr().push(2) // new_attr is undefined, so the initializer is executed.\na.new_attr()         // new_attr is now a getter returning the new array\na.new_attr().push(3) // The getter returns the existing array\na.new_attr()\n// =&gt; [2,3]\n</code></pre>\n\n<p>Getter and setters areused as an overloaded method call.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new AutoHash(function(obj, key) { return [] })\na.name(\"Me\") // sets a.name = \"Me\"\na.name()\n// =&gt; \"Me\"\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AutoHash'>AutoHash</span><br/><a href='source/ll_AutoHash.html#AutoHash-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/AutoHash-method-constructor' class='name expandable'>AutoHash</a>( <span class='pre'>block</span> ) : <a href=\"#!/api/AutoHash\" rel=\"AutoHash\" class=\"docClass\">AutoHash</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>)<div class='sub-desc'><p>Initializer function\n                                  for non existing attributes. Object[String] will take\n                                  the return value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/AutoHash\" rel=\"AutoHash\" class=\"docClass\">AutoHash</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});