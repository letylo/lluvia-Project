Ext.data.JsonP.Engine_State({"tagname":"class","name":"Engine.State","autodetected":{},"files":[{"filename":"ll_State.js","href":"ll_State.html#Engine-State"}],"extends":"Kernel.Foundation.DataType.VersionNumber","members":[{"name":"after_hooks","tagname":"property","owner":"Engine.State","id":"property-after_hooks","meta":{}},{"name":"before_hooks","tagname":"property","owner":"Engine.State","id":"property-before_hooks","meta":{}},{"name":"regime","tagname":"property","owner":"Engine.State","id":"property-regime","meta":{}},{"name":"sep","tagname":"property","owner":"Kernel.Foundation.DataType.VersionNumber","id":"property-sep","meta":{}},{"name":"REGIME","tagname":"property","owner":"Engine.State","id":"static-property-REGIME","meta":{"static":true}},{"name":"constructor","tagname":"method","owner":"Engine.State","id":"method-constructor","meta":{}},{"name":"_run","tagname":"method","owner":"Engine.State","id":"method-_run","meta":{}},{"name":"branch","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-branch","meta":{}},{"name":"branches","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-branches","meta":{}},{"name":"each","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-each","meta":{}},{"name":"get","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-get","meta":{}},{"name":"last","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-last","meta":{}},{"name":"last_value","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-last_value","meta":{}},{"name":"number","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-number","meta":{}},{"name":"number_value","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-number_value","meta":{}},{"name":"toString","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-toString","meta":{}},{"name":"valueOf","tagname":"method","owner":"Kernel.Foundation.DataType.VersionNumber","id":"method-valueOf","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Engine.State","short_doc":"Defines each of the states of an Automata. ...","component":false,"superclasses":["Kernel.Foundation.DataType.VersionNumber"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='docClass'>Kernel.Foundation.DataType.VersionNumber</a><div class='subclass '><strong>Engine.State</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ll_State.html#Engine-State' target='_blank'>ll_State.js</a></div></pre><div class='doc-contents'><p>Defines each of the states of an Automata.</p>\n\n<p>Automata states are a Enumeration of States\n(see <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration\" rel=\"Kernel.Foundation.Enumerable.Enumeration\" class=\"docClass\">Enumeration</a> and\n<a href=\"#!/api/Kernel.Foundation.Enumerable.EnumerationOf\" rel=\"Kernel.Foundation.Enumerable.EnumerationOf\" class=\"docClass\">EnumerationOf</a>\n)</p>\n\n<p>Remember that Enumerations are composed by\n<a href=\"#!/api/Kernel.Foundation.DataType.VersionNumber\" rel=\"Kernel.Foundation.DataType.VersionNumber\" class=\"docClass\">VersionNumbers</a> or its derivatives.\n(Constants with steroids)</p>\n\n<p>Defining my_enum.</p>\n\n<pre><code>var my_enum = new Enumeration(\"phase0\", \"phase1\")\n</code></pre>\n\n<p>will result in the following exucition:</p>\n\n<pre><code> //=&gt; my_enum.phase0 = new VersionNumber(0)\n //=&gt; my_enum.phase1 = new VersionNumber(1)\n</code></pre>\n\n<p>States can be executed in the following way:</p>\n\n<pre><code>var s = my_enum.phase0\ns[s]()  // Execution\n</code></pre>\n\n<h3>How to define what to execute?</h3>\n\n<p>Simply define the run method.</p>\n\n<pre><code>s.run = function(name) {\n    return \"Hi, \" + name\n}\n</code></pre>\n\n<p>And run:</p>\n\n<pre><code>s.run(\"Txema\")\n</code></pre>\n\n<p>Every state can be subdivided into regimes (up, steady and down), with their own drivers.</p>\n\n<pre><code>s.run.steady = function(name) {\n    return name + \" you are running steadily.\"\n}\n</code></pre>\n\n<p>Enable a particular regime and both drivers will be run.</p>\n\n<pre><code>s.run.regime = State.REGIME.steady\ns[s](\"Txema\")\n//=&gt; [\"Hi, Txema\", \"Txema you are running steadily.\"]\n</code></pre>\n\n<p>Notice the response is array composed by the return value of the general driver and the\none received by the regime one.</p>\n\n<h3>Example</h3>\n\n<p>Create a new State for an automata.</p>\n\n<pre><code>var a = new State(\"1.3.5\")\n</code></pre>\n\n<p>Then override run function to provide a default action\nto be executed independently of the substate (up, steady or down).</p>\n\n<pre><code>a.run = function(name) {\n    alert(\"Regime: \" + this.regime.name + \", Mr. \" + name)\n}\n</code></pre>\n\n<p>Provide the substate action (driver)</p>\n\n<pre><code>a.run.steady = function(name) {\n    alert(\"Hello all the time Mr. \" + name\")\n}\n</code></pre>\n\n<p>Define the regime of your state (up, steady or down)\n    a.regime = State.REGIME.steady</p>\n\n<p>Execute the state using this syntax:</p>\n\n<pre><code>a[a](\"Jones\")\n</code></pre>\n\n<h2>Hooks</h2>\n\n<p>Some extra additions can be used. State#before_hooks and State#after_hooks\nare two arrays of functions to be called before and after the drivers with the\nsame parameters of State#run</p>\n\n<p>The after_hooks calls are appended with an array containing the response\nof the general driver and the substate driver.</p>\n\n<p>Take a look to the following.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new State(\"1.3.5\")\na.door = \"locked\"\n\na.run = function(name) {\n    if (this.door != \"locked\") {\n        this.door = \"opened\"\n        return true\n    }\n    return false\n}\n\na.run.steady = function(name) {\n    if (this.door == \"opened\")\n        return \"2 people inside\"\n    return \"Can't see anybody. The door is closed.\"\n}\na.regime = State.REGIME.steady\n\na.before_hooks.push(function(obj) {\n    obj.door = \"unlocked\"\n})\n\n\na.after_hooks.push(function(obj, responses) {\n    alert(\"The door is opened: \" + responses[0] + \"\\n\" +\n        \"I see: \" + responses[1])\n})\na[a]()\n</code></pre>\n\n<p>The before hook is executed before the drivers and it unlocks the door.\nThe after driver shows two people and the door opened.</p>\n\n<p>obj is a parameter appended in before and after hooks and represents the\nobj that is executing the hooks.</p>\n\n<p>The after_hooks receive an ectra parameter responses.</p>\n\n<ol>\n<li>responses[0] is the response of the general driver, and</li>\n<li>responses[1] is the response of the substate driver.</li>\n</ol>\n\n\n<h2>Warning</h2>\n\n<p>  Avoid using run for naming a state.\n  Only steady regime is allowed to return a value.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-after_hooks' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-property-after_hooks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Engine.State-property-after_hooks' class='name expandable'>after_hooks</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'><p>List of functions for calling them after calling the\ndrivers.</p>\n</div><div class='long'><p>List of functions for calling them after calling the\ndrivers.</p>\n</div></div></div><div id='property-before_hooks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-property-before_hooks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Engine.State-property-before_hooks' class='name expandable'>before_hooks</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'><p>List of functions for calling them before calling the\ndrivers.</p>\n</div><div class='long'><p>List of functions for calling them before calling the\ndrivers.</p>\n</div></div></div><div id='property-regime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-property-regime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Engine.State-property-regime' class='name expandable'>regime</a> : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Current regime of the state: up, steady or down.</p>\n</div><div class='long'><p>Current regime of the state: up, steady or down.</p>\n</div></div></div><div id='property-sep' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-property-sep' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-property-sep' class='name expandable'>sep</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Separator in between major, minor and patch. ...</div><div class='long'><p>Separator in between major, minor and patch.</p>\n<p>Defaults to: <code>&quot;.&quot;</code></p></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-REGIME' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-static-property-REGIME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Engine.State-static-property-REGIME' class='name expandable'>REGIME</a> : Enumeration<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Possible values for a state: up, steady and down. ...</div><div class='long'><p>Possible values for a state: up, steady and down.\nup and down states provide a way politely enter and leave the state.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Engine.State-method-constructor' class='name expandable'>Engine.State</a>( <span class='pre'>label</span> ) : <a href=\"#!/api/Engine.State\" rel=\"Engine.State\" class=\"docClass\">Engine.State</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : String|VersionNumber<div class='sub-desc'><p>. Any valid parameter in\n                               <a href=\"#!/api/Kernel.Foundation.DataType.VersionNumber\" rel=\"Kernel.Foundation.DataType.VersionNumber\" class=\"docClass\">VersionNumber</a>\n                               Constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Engine.State\" rel=\"Engine.State\" class=\"docClass\">Engine.State</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.Foundation.DataType.VersionNumber-method-constructor\" rel=\"Kernel.Foundation.DataType.VersionNumber-method-constructor\" class=\"docClass\">Kernel.Foundation.DataType.VersionNumber.constructor</a></p></div></div></div><div id='method-_run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Engine.State'>Engine.State</span><br/><a href='source/ll_State.html#Engine-State-method-_run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Engine.State-method-_run' class='name expandable'>_run</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Controller that invokes the drivers. ...</div><div class='long'><p>Controller that invokes the drivers. This method is non writable, non enumerable\nand non configurable.\nThe last argument of the driver is a reference to a particular level (scope)\nof execution. The <em>this</em> pointer\nfor a single state. The owner of the state when attribute <em>owner</em> is defined.\nThe <em>this</em> keyword always refers to that particular reference inside a driver.</p>\n\n<h3>Example</h3>\n</div></div></div><div id='method-branch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-branch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-branch' class='name expandable'>branch</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Syntax\n\nVersionNumber#branch(level, (&lt;label&gt;[, version_number])+ )\n&lt;label&gt; ::= \"name[:value]\"\n\n\nWhen valu...</div><div class='long'><h2>Syntax</h2>\n\n<pre><code>VersionNumber#branch(level, (&lt;label&gt;[, version_number])+ )\n&lt;label&gt; ::= \"name[:value]\"\n</code></pre>\n\n<p>When <em>value</em> and <em>version_number</em> are present at the same time,\n<em>version_number</em> overrides value.</p>\n\n<p><em>version_number</em> is frequently an instance of VersionNumber but can\nbe anything but a string. When the value needs to be a string, convert\nit to String object.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"2.3.5\")\n//=&gt; { 2: {3: {5: {}}}}\na.branch(\"\", \"era1\")\n//=&gt; {\n//=&gt;   2: {3: {5: {}}},\n//=&gt;   era1: {}\n//=&gt; }\na.branch(\"2.3\", \"era1\", \"era2\")\n//=&gt; {\n//=&gt;   2: {3: {5: {},\n//=&gt;           era1: {},\n//=&gt;           era2: {}\n//=&gt; }}}\na.branch(\"2.3\", \"era1\", \"era2:1.5.7\")\n//=&gt; {\n//=&gt;   2: {3: {5: {},\n//=&gt;           era1: {},\n//=&gt;           era2: { 1: { 5: {7: {}}}}\n//=&gt; }}}\na.branch(\"2.3\", \"era1\", \"era2\", new VersionNumber(\"1.5.3\"), \"era4\")\n//=&gt; {\n//=&gt;   2: {3: {5: {},\n//=&gt;           era1: {},\n//=&gt;           era2: { 1: { 5: {3: {}}}}\n//=&gt; }}}\n</code></pre>\n\n<p>VersionNumber can be used as labels: Please be careful. It can lead you to errors.</p>\n\n<pre><code>a.branch(\"2.3\", new VersionNumber(\"1.3\"), function action(){} )\n//=&gt; {\n//=&gt;   2: {\n//=&gt;        3: {\"1.3\": function action(){} }\n//=&gt;      }\n//=&gt; }\n</code></pre>\n\n<p>The above example can drive you to mistake a[\"1.3\"] as a is VersionNumber when it\nactually isn't.</p>\n\n<h2>Hack</h2>\n\n<p>Notice that defining a key with the value returned by toString can drive\nyou to a default action.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.5.4\")\na.branch(\"\", \"1.5.4\", function action() {\n    alert(\"Hello\")\n})\na[a]()\n</code></pre>\n\n<p>This example triggers a \"Hello\" alert. When a is used as an index of toString()\nis automatically called, yielding the key of the function.</p>\n</div></div></div><div id='method-branches' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-branches' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-branches' class='name expandable'>branches</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns all the subbranches of a VersionNumber\n\nExample\n\nLet the VersionNumber, v, be:\n\n//=&gt; {\n//=&gt;   1:    {5:...</div><div class='long'><p>Returns all the subbranches of a VersionNumber</p>\n\n<h3>Example</h3>\n\n<p>Let the VersionNumber, v, be:</p>\n\n<pre><code>//=&gt; {\n//=&gt;   1:    {5: {2: {}}},\n//=&gt;   era1: {2: {7: {}}},\n//=&gt;   era2: {2: {8: {}}}\n//=&gt; }\nv.branches()\n//=&gt; [\"era1\", \"era2\"]\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Branches (non numeric keys) of a level in a VersionNumber object.</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-each' class='name expandable'>each</a>( <span class='pre'>block</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls the block for every numeric value in this VersionNumber object. ...</div><div class='long'><p>Calls the block for every numeric value in this VersionNumber object.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.5.9\")\n//=&gt; { 1: { 5: { 9: {}}} }\n\na.each( function(number, value_of_number, container){;} )\n</code></pre>\n\n<p>In the first call param values are:</p>\n\n<pre><code>number          //=&gt; 1\nvalue_of_number //=&gt; { 5: { 9: {}}}\ncontainer       //=&gt; { 1: { 5: { 9: {}}} }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Number,Object, Object)<div class='sub-desc'><p>Function block to be called.</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-get' class='name expandable'>get</a>( <span class='pre'>version</span> ) : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the queried subelement. ...</div><div class='long'><p>Returns the queried subelement.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.5.2\")\n//=&gt; {1: {5: {2: {}}}}\na.get(\"1.5\")\n//=&gt; {2: {}}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>version</span> : String | VersionNumber<div class='sub-desc'><p>\"1.5.3\" or new VersionNumber(\"1.5.3\") for instance.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>VersionNumber</span><div class='sub-desc'><p>Reference to the object retrieved or null if not found.</p>\n</div></li></ul></div></div></div><div id='method-last' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-last' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-last' class='name expandable'>last</a>( <span class='pre'></span> ) : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last object. ...</div><div class='long'><p>Returns the last object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>VersionNumber</span><div class='sub-desc'><p>Reference to last object retrieved.</p>\n</div></li></ul></div></div></div><div id='method-last_value' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-last_value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-last_value' class='name expandable'>last_value</a>( <span class='pre'></span> ) : VersionNumber<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last value ...</div><div class='long'><p>Returns the last value</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>VersionNumber</span><div class='sub-desc'><p>Last object key.</p>\n</div></li></ul></div></div></div><div id='method-number' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-number' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-number' class='name expandable'>number</a>( <span class='pre'></span> ) : Number | undefined<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the object associated with the numeric key of VersionNumber. ...</div><div class='long'><p>Returns the object associated with the numeric key of VersionNumber.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.5.2\")\na.era1 = new VersionNumber(\"2.7\")\n//=&gt; {\n//=&gt;   1:    {5: {2: {}}},\n//=&gt;   era1: {2: {7: {}}}\n//=&gt; }\na.number()\n//=&gt; {5: {2: {}}}\n</code></pre>\n\n<p>The era1 key is discarded. If two numeric keys are present, only the first\none will be taken into account.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number | undefined</span><div class='sub-desc'><p>Value associated the numeric key.</p>\n</div></li></ul></div></div></div><div id='method-number_value' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-number_value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-number_value' class='name expandable'>number_value</a>( <span class='pre'></span> ) : Number | undefined<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the numeric key of VersionNumber. ...</div><div class='long'><p>Returns the numeric key of VersionNumber.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.5.2\")\na.era1 = new VersionNumber(\"2.7\")\n//=&gt; {\n//=&gt;   1:    {5: {2: {}}},\n//=&gt;   era1: {2: {7: {}}}\n//=&gt; }\na.number_value()\n//=&gt; 1\n</code></pre>\n\n<p>The era1 key is discarded. <em>number_value</em> will only return the first numeric key.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number | undefined</span><div class='sub-desc'><p>Numeric key of this.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Prints the version number. ...</div><div class='long'><p>Prints the version number.</p>\n\n<h3>Example</h3>\n\n<pre><code>var v = new VersionNumber(\"7.4.1\")\nv.toString()\n//=&gt; \"7.4.1\"\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Printable version of VersionNumber objects.</p>\n</div></li></ul></div></div></div><div id='method-valueOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.Foundation.DataType.VersionNumber' rel='Kernel.Foundation.DataType.VersionNumber' class='defined-in docClass'>Kernel.Foundation.DataType.VersionNumber</a><br/><a href='source/ll_VersionNumber.html#Kernel-Foundation-DataType-VersionNumber-method-valueOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.DataType.VersionNumber-method-valueOf' class='name expandable'>valueOf</a>( <span class='pre'></span> ) : Number | String<span class=\"signature\"></span></div><div class='description'><div class='short'>Yields the las integer of the number as a number or the value itself. ...</div><div class='long'><p>Yields the las integer of the number as a number or the value itself.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new VersionNumber(\"1.2.3\")\na.valueOf()\n//=&gt; 3\n\na == 3\n//=&gt; true\n\nvar a = new VersionNumber(\"1.2.a\")\na.valueOf()\n//=&gt; \"a\"\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number | String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});