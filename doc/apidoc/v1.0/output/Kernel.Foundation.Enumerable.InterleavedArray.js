Ext.data.JsonP.Kernel_Foundation_Enumerable_InterleavedArray({"tagname":"class","name":"Kernel.Foundation.Enumerable.InterleavedArray","autodetected":{},"files":[{"filename":"ll_InterleavedArray.js","href":"ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray"}],"extends":"Kernel.JSNative.Array","members":[{"name":"length","tagname":"property","owner":"Kernel.JSNative.Array","id":"property-length","meta":{}},{"name":"constructor","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-constructor","meta":{}},{"name":"assoc","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-assoc","meta":{}},{"name":"at","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-at","meta":{}},{"name":"clear","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-clear","meta":{}},{"name":"clone","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-clone","meta":{}},{"name":"clone$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-cloneS-B","meta":{"chainable":true}},{"name":"collect","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-collect","meta":{}},{"name":"collect$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-collectS-B","meta":{"chainable":true}},{"name":"combination","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-combination","meta":{}},{"name":"compact","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-compact","meta":{}},{"name":"compact$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-compactS-B","meta":{"chainable":true}},{"name":"compose","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-compose","meta":{}},{"name":"concat","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-concat","meta":{}},{"name":"count","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-count","meta":{}},{"name":"cycle","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-cycle","meta":{}},{"name":"delete$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-deleteS-B","meta":{}},{"name":"distribute","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-distribute","meta":{}},{"name":"distribute$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-distributeS-B","meta":{}},{"name":"drop","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-drop","meta":{}},{"name":"drop_while","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-drop_while","meta":{}},{"name":"each","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-each","meta":{}},{"name":"each_index","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-each_index","meta":{}},{"name":"each_with_index","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-each_with_index","meta":{}},{"name":"empty$U","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-emptyS-U","meta":{}},{"name":"enumerate","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-enumerate","meta":{}},{"name":"eql$U","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-eqlS-U","meta":{}},{"name":"equals$U","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-equalsS-U","meta":{}},{"name":"erase$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-eraseS-B","meta":{}},{"name":"erase_at$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-erase_atS-B","meta":{}},{"name":"erase_if","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-erase_if","meta":{}},{"name":"erase_if$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-erase_ifS-B","meta":{}},{"name":"every","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-every","meta":{}},{"name":"filter","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-filter","meta":{}},{"name":"first","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-first","meta":{}},{"name":"flatten","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-flatten","meta":{}},{"name":"forEach","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-forEach","meta":{}},{"name":"go","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-go","meta":{}},{"name":"hover","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-hover","meta":{}},{"name":"include$U","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-includeS-U","meta":{}},{"name":"index","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-index","meta":{}},{"name":"indexOf","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-indexOf","meta":{}},{"name":"infiltrate","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-infiltrate","meta":{"chainable":true}},{"name":"inject","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-inject","meta":{}},{"name":"inject_with_index","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-inject_with_index","meta":{}},{"name":"inspect","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-inspect","meta":{}},{"name":"join","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-join","meta":{}},{"name":"keys","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-keys","meta":{}},{"name":"last","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-last","meta":{}},{"name":"lastIndexOf","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-lastIndexOf","meta":{}},{"name":"map","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-map","meta":{}},{"name":"map$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-mapS-B","meta":{"chainable":true}},{"name":"merge","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-merge","meta":{}},{"name":"pop","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-pop","meta":{}},{"name":"product","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-product","meta":{}},{"name":"push","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-push","meta":{}},{"name":"rassoc","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-rassoc","meta":{}},{"name":"reduce","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-reduce","meta":{}},{"name":"reduceRight","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-reduceRight","meta":{}},{"name":"replace","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-replace","meta":{}},{"name":"reverse","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-reverse","meta":{}},{"name":"reverse_each","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-reverse_each","meta":{}},{"name":"rindex","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-rindex","meta":{}},{"name":"rotate","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-rotate","meta":{}},{"name":"select_if","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-select_if","meta":{}},{"name":"shift","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-shift","meta":{}},{"name":"shuffle","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-shuffle","meta":{}},{"name":"size","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-size","meta":{}},{"name":"slice","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-slice","meta":{}},{"name":"some","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-some","meta":{}},{"name":"sort","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-sort","meta":{}},{"name":"sort_by","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-sort_by","meta":{}},{"name":"sort_by$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-sort_byS-B","meta":{"chainable":true}},{"name":"splice","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-splice","meta":{}},{"name":"strip_all","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-strip_all","meta":{}},{"name":"take","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-take","meta":{}},{"name":"take_while","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-take_while","meta":{}},{"name":"toString","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-toString","meta":{}},{"name":"to_a","tagname":"method","owner":"Kernel.Foundation.Enumerable.InterleavedArray","id":"method-to_a","meta":{}},{"name":"to_v","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-to_v","meta":{}},{"name":"transpose","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-transpose","meta":{}},{"name":"uniq","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-uniq","meta":{}},{"name":"uniq$B","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-uniqS-B","meta":{"chainable":true}},{"name":"unpack","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-unpack","meta":{}},{"name":"unshift","tagname":"method","owner":"Kernel.JSNative.Array","id":"method-unshift","meta":{}},{"name":"values_at","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-values_at","meta":{}},{"name":"zip","tagname":"method","owner":"Kernel.CoreExt.Array","id":"method-zip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.Foundation.Enumerable.InterleavedArray","short_doc":"Creates an array with subindexes as in semantic version controlling. ...","component":false,"superclasses":["Kernel.JSNative.Array"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":["Kernel.CoreExt.Array"],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='docClass'>Kernel.JSNative.Array</a><div class='subclass '><strong>Kernel.Foundation.Enumerable.InterleavedArray</strong></div></div><h4>Inherited mixins</h4><div class='dependency'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='docClass'>Kernel.CoreExt.Array</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray' target='_blank'>ll_InterleavedArray.js</a></div></pre><div class='doc-contents'><p>Creates an array with subindexes as in <a href=\"http://semver.org/\">semantic version controlling</a>.\nIt is the complementary class of Enumeration <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration\" rel=\"Kernel.Foundation.Enumerable.Enumeration\" class=\"docClass\">Kernel.Foundation.Enumerable.Enumeration</a></p>\n\n<h3>Example</h3>\n\n<pre><code>new Interleaved Array(2, 1, [2, [3, [5,7], 5]], 7, 10, [4, [5,7]], 5)\n//=&gt; {\n//=&gt;   0: 2\n//=&gt;   1: 1\n//=&gt;   2: 2\n//=&gt;   2.1: 3\n//=&gt;   2.2: 5,7\n//=&gt;   2.3: 5\n//=&gt;   3: 7\n//=&gt;   4: 10\n//=&gt;   5: 4\n//=&gt;   5.1: 5\n//=&gt;   5.2: 7\n//=&gt;   6: 5\n//=&gt; }\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-length' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-property-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-property-length' class='name expandable'>length</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reflects the number of elements in an array. ...</div><div class='long'><p>Reflects the number of elements in an array.</p>\n\n<p>The value of the <code>length</code> property is an integer with a positive sign and a value less than 2 to the 32\npower (232).</p>\n\n<p>You can set the <code>length</code> property to truncate an array at any time. When you extend an array by changing\nits <code>length</code> property, the number of actual elements does not increase; for example, if you set <code>length</code>\nto 3 when it is currently 2, the array still contains only 2 elements.</p>\n\n<p>In the following example the array numbers is iterated through by looking at the <code>length</code> property to see\nhow many elements it has. Each value is then doubled.</p>\n\n<pre><code>var numbers = [1,2,3,4,5];\nfor (var i = 0; i &lt; numbers.length; i++) {\n    numbers[i] *= 2;\n}\n// numbers is now [2,4,6,8,10];\n</code></pre>\n\n<p>The following example shortens the array <code>statesUS</code> to a length of 50 if the current <code>length</code> is greater\nthan 50.</p>\n\n<pre><code>if (statesUS.length &gt; 50) {\n    statesUS.length=50\n}\n</code></pre>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-constructor' class='name expandable'>Kernel.Foundation.Enumerable.InterleavedArray</a>( <span class='pre'>elements</span> ) : <a href=\"#!/api/Kernel.Foundation.Enumerable.InterleavedArray\" rel=\"Kernel.Foundation.Enumerable.InterleavedArray\" class=\"docClass\">Kernel.Foundation.Enumerable.InterleavedArray</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new InterleavedArray\n\nExample\n\nnew InterleavedArray(2)\n//=&gt; { 0: 2}\n\nnew InterleavedArray([2])\n//=&gt; {...</div><div class='long'><p>Creates a new InterleavedArray</p>\n\n<h3>Example</h3>\n\n<pre><code>new InterleavedArray(2)\n//=&gt; { 0: 2}\n\nnew InterleavedArray([2])\n//=&gt; {0: undefined, 0.1: 2}\n\nnew InterleavedArray(2,3)\n//=&gt; {0: 2, 1:3 }\n\nnew InterleavedArray([2,3], [5,7])\n//=&gt; {0: undefined, 0.1: 2, 0.2: 3, 1:undefined, 1.1: 5, 1.2: 7}\n\nnew InterleavedArray(1, [2,3], [5,7])\n//=&gt; {0: 1, 0.1: 2, 0.2: 3, 1:undefined, 1.1: 5, 1.2: 7}\n\nnew InterleavedArray([2,3])\n//=&gt; {0: undefined, 0.1: 2, 0.2: 3}\n\nnew InterleavedArray([2,3], 3, [5,7])\n//=&gt; {0: undefined, 0.1: 2, 0.2: 3, 1:3, 1.1: 5, 1.2: 7}\n\nnew InterleavedArray([2], 3)\n//=&gt; { 0: undefined, 0.1: 2, 1: 3}\n\nnew InterleavedArray([[2], 3], 7)\n//=&gt; { 0: undefined, 0.1: undefined, 0.1.1: 2, 0.2: 3, 1: 7}\n\nnew InterleavedArray(2, [3, 5])\n//=&gt; {0: 2, 0.1: 3, 0.2: 5}\n\nnew InterleavedArray( [2, [3, 5]] )\n//=&gt; {0: undefined, 0.1: 2, 0.1.1: 3, 0.1.2: 5}\n\nnew InterleavedArray( [2, [3, 5], 8], 9 )\n//=&gt; {0: undefined, 0.1: 2, 0.1.1: 3, 0.1.2: 5, 0.2: 8, 1: 9}\n\nnew Interleaved Array( 2, 1, [2, [3, [5,7], 5]], 7, 10, [4, [5,7]], 5)\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elements</span> : Object | Array<div class='sub-desc'><p>Variadic list or elements.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.Foundation.Enumerable.InterleavedArray\" rel=\"Kernel.Foundation.Enumerable.InterleavedArray\" class=\"docClass\">Kernel.Foundation.Enumerable.InterleavedArray</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.JSNative.Array-method-constructor\" rel=\"Kernel.JSNative.Array-method-constructor\" class=\"docClass\">Kernel.JSNative.Array.constructor</a></p></div></div></div><div id='method-assoc' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-assoc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-assoc' class='name expandable'>assoc</a>( <span class='pre'>object</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks the first element of each array and compares it with the passed parameter. ...</div><div class='long'><p>Checks the first element of each array and compares it with the passed parameter. If found, returns the array that contains it.\nIf not, returns null.</p>\n\n<h3>Example</h3>\n\n<pre><code>var coupleOne = [\"David\", \"Homer\"]\nvar coupleTwo = [\"John\", \"Steve\"]\nvar index = [coupleOne, coupleTwo]\nvar winnerCouple = index.assoc(\"John\")     //=&gt; [\"John\",\"Steve\"]\nvar winnerCouple = index.assoc([\"John\"])   //=&gt; [\"John\",\"Steve\"]\nvar winnerCouple = index.assoc(\"Homer\")    //=&gt; null\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>searched parameter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array</p>\n</div></li></ul></div></div></div><div id='method-at' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-at' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-at' class='name expandable'>at</a>( <span class='pre'>Array</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the element corresponding to the index passed as parameter. ...</div><div class='long'><p>Returns the element corresponding to the index passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.at(3)\n//=&gt; numbers = 4\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Array</span> : number<div class='sub-desc'><p>index position.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The selected element by an index passed as parameter.</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Clears an Array from the elements that it contains. ...</div><div class='long'><p>Clears an Array from the elements that it contains.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [34,56,78,98]\nnumbers.clear()\nnumbers\n//=&gt; numbers = []\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Empty array</p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Clones an array. ...</div><div class='long'><p>Clones an array.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [34,56,78,98]\nnumbers2 = numbers.clone()\nnumbers2\n//=&gt; [34,56,78,98]\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Cloned array</p>\n</div></li></ul></div></div></div><div id='method-cloneS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-cloneS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-cloneS-B' class='name expandable'>clone$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.\n(see Array#clone)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-collect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-collect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-collect' class='name expandable'>collect</a>( <span class='pre'>block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Maps array elements using a block for the transfomation. ...</div><div class='long'><p>Maps array elements using a block for the transfomation.</p>\n\n<h3>Example</h3>\n\n<pre><code>var number     = [250, 500, 1143]\nvar discount   = 0.25\nvar discounted = number.collect(function(obj){\n                             return obj * (1 - discount)\n                          })\ndiscounted\n//=&gt;  [187.5, 375, 857.25]\n</code></pre>\n\n<h3>Example</h3>\n\n<pre><code>var list = [ {name: \"John\", age:23}, {name: \"Mary\", age: 27 } ]\nlist.collect(\"age\")\n// =&gt; [23, 27]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object)<div class='sub-desc'><p>Transforming function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns the trasformed image of self</p>\n</div></li></ul></div></div></div><div id='method-collectS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-collectS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-collectS-B' class='name expandable'>collect$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.\n(see Array#collect)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-combination' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-combination' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-combination' class='name expandable'>combination</a>( <span class='pre'>Grouping</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates all the possible combinations grouped by number. ...</div><div class='long'><p>Generates all the possible combinations grouped by <em>number</em>.</p>\n\n<h3>Example</h3>\n\n<pre><code> a = [1, 2, 3, 4]\n a.combination(1)  //=&gt; [[1], [2], [3], [4]]\n a.combination(2)  //=&gt; [[1,2], [1,3], [1,4], [2, 3], [2, 4], [3, 4]]\n a.combination(3)  //=&gt; [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]\n a.combination(4)  //=&gt; [[1, 2, 3, 4]]\n a.combination(0)  //=&gt; [[]]\n a.combination(5)  //=&gt; []\n</code></pre>\n\n<h3>Diagram</h3>\n\n<p>For pairs of 3</p>\n\n<pre><code>     1    2\n    / \\   |\n   2   3  3\n  / \\  |  |\n 3   4 4  4\n\n\n [1]\n [[1,2], [1,3]]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Grouping</span> : number<div class='sub-desc'><p>amount</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>All the combinations.</p>\n</div></li></ul></div></div></div><div id='method-compact' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-compact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-compact' class='name expandable'>compact</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the null elements of an array. ...</div><div class='long'><p>Deletes the null elements of an array.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,null,2,null,3,null,4,5,6,7,8,9]\nnewNumbers = numbers.compact()\n// =&gt; [1,2,3,4,5,6,7,8,9]\n\nvar numbers = [null,null,null]\nnewNumbers = numbers.compact()\n// =&gt; []\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns the array clean and null elements.</p>\n</div></li></ul></div></div></div><div id='method-compactS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-compactS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-compactS-B' class='name expandable'>compact$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.\n(see Array#compact)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-compose' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-compose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-compose' class='name expandable'>compose</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates combinations via cartesian product. ...</div><div class='long'><p>Creates combinations via cartesian product.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [\"teki\", [\"anal\", \"hypnot\"], \"izer\"]\na.compose(\"_\", \"\")\n// =&gt; [\"teki_analizer\", \"teki_hypnotizer\"]\n\n\nvar a = [[\"teki\", \"woman\"], [\"anal\", \"hypnot\"], \"izer\"]\na.compose(\"_\", \"\")\n// =&gt; [\"teki_analizer\", \"teki_hypnotizer\", \"woman_analizer\", \"woman_hypnotizer\"]\n\n\nvar a = [\"prefix\", [[\"hyper\", \"super\"], \"memo\", [\"person\", \"rocket\"] ], \"izer\"]\na.compose(\"_\", [\"-\", \"&gt;\"], \"\")\n// =&gt; [ \"prefix_hyper-memo&gt;personizer\", \"prefix_super-memo&gt;personizer\",\n//      \"prefix_hyper-memo&gt;rocketizer\", \"prefix_super-memo&gt;rocketizer\" ]\n</code></pre>\n</div></div></div><div id='method-concat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-concat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-concat' class='name expandable'>concat</a>( <span class='pre'>values</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new array comprised of this array joined with other array(s) and/or value(s). ...</div><div class='long'><p>Returns a new array comprised of this array joined with other array(s) and/or value(s).</p>\n\n<p><code>concat</code> creates a new array consisting of the elements in the <code>this</code> object on which it is called,\nfollowed in order by, for each argument, the elements of that argument (if the argument is an\narray) or the argument itself (if the argument is not an array).</p>\n\n<p><code>concat</code> does not alter <code>this</code> or any of the arrays provided as arguments but instead returns a\n\"one level deep\" copy that contains copies of the same elements combined from the original arrays.\nElements of the original arrays are copied into the new array as follows:\nObject references (and not the actual object): <code>concat</code> copies object references into the new\narray. Both the original and new array refer to the same object. That is, if a referenced object is\nmodified, the changes are visible to both the new and original arrays.\nStrings and numbers (not <a href=\"#!/api/Kernel.JSNative.String\" rel=\"Kernel.JSNative.String\" class=\"docClass\">Kernel.JSNative.String</a> and <a href=\"#!/api/Kernel.JSNative.Number\" rel=\"Kernel.JSNative.Number\" class=\"docClass\">Kernel.JSNative.Number</a> objects): <code>concat</code> copies the values of\nstrings and numbers into the new array.</p>\n\n<p>Any operation on the new array will have no effect on the original arrays, and vice versa.</p>\n\n<h3>Concatenating two arrays</h3>\n\n<p>The following code concatenates two arrays:</p>\n\n<pre><code>var alpha = [\"a\", \"b\", \"c\"];\nvar numeric = [1, 2, 3];\n\n// creates array [\"a\", \"b\", \"c\", 1, 2, 3]; alpha and numeric are unchanged\nvar alphaNumeric = alpha.concat(numeric);\n</code></pre>\n\n<h3>Concatenating three arrays</h3>\n\n<p>The following code concatenates three arrays:</p>\n\n<pre><code>var num1 = [1, 2, 3];\nvar num2 = [4, 5, 6];\nvar num3 = [7, 8, 9];\n\n// creates array [1, 2, 3, 4, 5, 6, 7, 8, 9]; num1, num2, num3 are unchanged\nvar nums = num1.concat(num2, num3);\n</code></pre>\n\n<h3>Concatenating values to an array</h3>\n\n<p>The following code concatenates three values to an array:</p>\n\n<pre><code>var alpha = ['a', 'b', 'c'];\n\n// creates array [\"a\", \"b\", \"c\", 1, 2, 3], leaving alpha unchanged\nvar alphaNumeric = alpha.concat(1, [2, 3]);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>values</span> : Object...<div class='sub-desc'><p>Arrays and/or values to concatenate to the resulting array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>New array.</p>\n</div></li></ul></div></div></div><div id='method-count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-count' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-count' class='name expandable'>count</a>( <span class='pre'>[to_find], [block]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Counts all the elements of the array matching a particular criteria, if given. ...</div><div class='long'><p>Counts all the elements of the array matching a particular criteria, if given.</p>\n\n<h3>Example</h3>\n\n<pre><code>var names = [\"Peter\", \"John\", \"David\"]\nnames.count()\n//=&gt; 3\n\nvar names = [\"Peter\", \"John\", \"Peter\", \"David\"]\nnames.count(\"Peter\")\n//=&gt; 2\n\nvar names = [\"Peter\", \"John\", \"David\"]\nnames.count(function(element){\n               return element.length == 5\n            })\n//=&gt; 2\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>to_find</span> : Object (optional)<div class='sub-desc'><p>Count occurences of <em>to_find</em></p>\n</div></li><li><span class='pre'>block</span> : function(Object) (optional)<div class='sub-desc'><p>Counting criteria</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Number of  matches.</p>\n</div></li></ul></div></div></div><div id='method-cycle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-cycle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-cycle' class='name expandable'>cycle</a>( <span class='pre'>times, block</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls block for each element n times or forever if none or null is given. ...</div><div class='long'><p>Calls block for each element n times or forever if none or null is given.\nIf a non-positive number is given or the array is empty, does nothing.\nReturns null if the loop has finished without getting interrupted.</p>\n\n<h3>Example</h3>\n\n<pre><code>[1,3,2].cycle(2, function(element){\n alert(element);\n})\n//=&gt; shows an alert for each element of the array twice\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>times</span> : Number<div class='sub-desc'><p>Number of iterations.</p>\n</div></li><li><span class='pre'>block</span> : Function<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-deleteS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-deleteS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-deleteS-B' class='name expandable'>delete$B</a>( <span class='pre'>Object</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Eliminates an object from the array that meets the parameter passed as position. ...</div><div class='long'><p>Eliminates an object from the array that meets the parameter passed as position. The object can also be returned</p>\n\n<h3>Example 1</h3>\n\n<pre><code>var numbers = [1, 2, 3, 4, 5]\nnumbers.delete$B(3)\nnumbers\n//=&gt; numbers = [1, 2, 4, 5]\n</code></pre>\n\n<h3>Example 2</h3>\n\n<pre><code>var numbers = [1, 2, 3, 4, 5]\nnumbers.delete$B(8, function(){return \"Item not found\"})\n//=&gt; \"Item not found\"\n</code></pre>\n\n<h3>Example 3</h3>\n\n<pre><code>var numbers = [1, 2, 3, 4, 5]\nvar deleted = numbers.delete$B(3)\ndeleted\n//=&gt; deleted = 3\n</code></pre>\n\n<p>Array#delete$B() calls remove undefined values.</p>\n\n<h3>Example 4</h3>\n\n<pre><code>a\n// =&gt; [undefined, 5, 7, undefined, undefined, 2]\na.delete$B()\na\n// =&gt; [5, 7, 2]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object<div class='sub-desc'><p>that is passed to the method as parameter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>A copy of the array without the deleted elements.</p>\n</div></li></ul></div></div></div><div id='method-distribute' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-distribute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-distribute' class='name expandable'>distribute</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Distributive property\n\nExample\n\nvar a = [2, 3]\na.distribute([5, 6])\n// =&gt; [ [[2, 5], [2, 6]], [[3, 5], [3,6]]] ...</div><div class='long'><p>Distributive property</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [2, 3]\na.distribute([5, 6])\n// =&gt; [ [[2, 5], [2, 6]], [[3, 5], [3,6]]]\n</code></pre>\n</div></div></div><div id='method-distributeS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-distributeS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-distributeS-B' class='name expandable'>distribute$B</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Bang method. ...</div><div class='long'><p>Bang method. See Array#distribute</p>\n</div></div></div><div id='method-drop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-drop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-drop' class='name expandable'>drop</a>( <span class='pre'>Position</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes elements from position 0 of the array to the possition passed as parameter. ...</div><div class='long'><p>Deletes elements from position 0 of the array to the possition passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.drop(3)\n//=&gt; [5,6,7,8,9]\n\nvar numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.drop(-3)\n//=&gt; [1,2,3,4,5,6,7,8,9]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Position</span> : Number<div class='sub-desc'><p>to stop deleting data of the array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns the array elements that haven't been deleted.</p>\n</div></li></ul></div></div></div><div id='method-drop_while' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-drop_while' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-drop_while' class='name expandable'>drop_while</a>( <span class='pre'>Block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a block passed as parameter that returns either an\nobject or null. ...</div><div class='long'><p>Executes a block passed as parameter that returns either an\nobject or null. If it returns null, this position will be deleted.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.drop_while(function(element){ return element &gt; 5? element : null})\n//=&gt; [7,8,9]\n\nvar numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.drop_while(function(element){ return element &gt; 7? element : null})\n//=&gt; [8,9]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Block</span> : function(Object):(boolean | Object)<div class='sub-desc'><p>receiving the element.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns an array of elements that have not been deleted.</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-each' class='name expandable'>each</a>( <span class='pre'>block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls the block once for each element of the Array. ...</div><div class='long'><p>Calls the block once for each element of the Array.\nThis method shows an alert for item.</p>\n\n<h3>Example</h3>\n\n<pre><code>var names = [\"Peter\", \"John\", \"David\"]\nnames.each(function (arrayItem){ alert(arrayItem) })\n//=&gt; [\"Peter\", \"John\", \"David\"]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object)<div class='sub-desc'><p>Argument processor called once for every Array item</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns self</p>\n</div></li></ul></div></div></div><div id='method-each_index' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-each_index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-each_index' class='name expandable'>each_index</a>( <span class='pre'>block</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls the block once for each item with the element and its index. ...</div><div class='long'><p>Calls the block once for each item with the element and its index.</p>\n\n<h3>Example</h3>\n\n<pre><code>var names = [\"Peter\", \"Johnnie\", \"Walker\"]\nnames.each_index(function (arrayIndex){ alert(arrayIndex)})\n//=&gt; [\"Peter\", \"Johnnie\", \"Walker\"]\n</code></pre>\n\n<p>This code pops an alert for each array item, showing the array index number</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(number)<div class='sub-desc'><p>Called once with every index.</p>\n</div></li></ul></div></div></div><div id='method-each_with_index' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-each_with_index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-each_with_index' class='name expandable'>each_with_index</a>( <span class='pre'>block</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls the block with the element and its index. ...</div><div class='long'><p>Calls the block with the element and its index.</p>\n\n<h3>Example</h3>\n\n<pre><code>var list  = \"\"\nvar names = [\"Peter\", \"John\", \"David\"]\nnames.each_with_index(\n  function(arrayItem, arrayIndex){\n                list += \"\\t\" + arrayIndex + \".- \" + arrayItem + \"\\n\"\n  })\nlist\n//=&gt; \"  0.- Peter\n//=&gt;    1.- John\n//=&gt;    2.- David \"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object, number)<div class='sub-desc'><p>(element, index) Called once with every element and index.</p>\n</div></li></ul></div></div></div><div id='method-emptyS-U' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-emptyS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-emptyS-U' class='name expandable'>empty$U</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the array is empty. ...</div><div class='long'><p>Checks if the array is empty.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = []\na.empty$U()\n//=&gt; true\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>if empty, returns true. If not, false</p>\n</div></li></ul></div></div></div><div id='method-enumerate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-enumerate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-enumerate' class='name expandable'>enumerate</a>( <span class='pre'>base_index, subarray</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reenumerates all of the entries of the InterleavedArray ...</div><div class='long'><p>Reenumerates all of the entries of the InterleavedArray</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>base_index</span> : Number|String<div class='sub-desc'><p>Base number for the enumeration.</p>\n</div></li><li><span class='pre'>subarray</span> : InterleavedArray<div class='sub-desc'><p>Subelements to interleave</p>\n</div></li></ul></div></div></div><div id='method-eqlS-U' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-eqlS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-eqlS-U' class='name expandable'>eql$U</a>( <span class='pre'></span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the arrays are equals. ...</div><div class='long'><p>Checks if the arrays are equals.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [1,2]\nvar b = [1,2]\na.eql$U(b)\n// =&gt; true\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>if they are equal, returns true. If not, false.</p>\n</div></li></ul></div></div></div><div id='method-equalsS-U' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-equalsS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-equalsS-U' class='name expandable'>equals$U</a>( <span class='pre'>Array</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares two arrays. ...</div><div class='long'><p>Compares two arrays.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5]\nvar numbers2 = [1,2,3,4,5]\nnumbers.equals$U(numbers2)\n//=&gt; true\n</code></pre>\n\n<p>   var cadena = [\"Soy\", \"Pepe\"]\n   var cadena2 = [\"Soy\", \"Laura\"]\n   cadena.equals$U(cadena2)\n   //=> false</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Array</span> : Array<div class='sub-desc'><p>to compare</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If the arrays matches the condition, it returns true. If not, it returns false</p>\n</div></li></ul></div></div></div><div id='method-eraseS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-eraseS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-eraseS-B' class='name expandable'>erase$B</a>( <span class='pre'>Index</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the element especify in parenthesis. ...</div><div class='long'><p>Deletes the element especify in parenthesis.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnumbers.erase$B(3)\n//=&gt; [1,2,4,5,6,7,8,9]\n</code></pre>\n\n<h3>Notice</h3>\n\n<p>Notice the difference with the method erase_at$B. The element extracted here is number 3.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Index</span> : Number<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>This</p>\n</div></li></ul></div></div></div><div id='method-erase_atS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-erase_atS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-erase_atS-B' class='name expandable'>erase_at$B</a>( <span class='pre'>Position</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the element on an specific position. ...</div><div class='long'><p>Deletes the element on an specific position.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\n\nnumbers.erase_at$B(3)          //=&gt; [1,2,3,5,6,7,8,9]\nnumbers.erase_at$B(-1)         //=&gt; [1,2,3,4,5,6,7,8]\nnumbers.erase_at$B(0)          //=&gt; [2,3,4,5,6,7,8,9]\nnumbers.erase_at$B(8)          //=&gt; [1,2,3,4,5,6,7,8]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Position</span> : Number<div class='sub-desc'><p>of the array item to be deleted</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-erase_if' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-erase_if' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-erase_if' class='name expandable'>erase_if</a>( <span class='pre'>Block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes all the array elements that meet the condition specified by the block. ...</div><div class='long'><p>Deletes all the array elements that meet the condition specified by the block.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnumbers.erase_if(function(obj){ return obj &gt; 2 })\n//=&gt; [1,2]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Block</span> : function(Object):boolean<div class='sub-desc'><p>that must contain a condition by which the element will be erased or not.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns those elements that satisfy the condition.</p>\n</div></li></ul></div></div></div><div id='method-erase_ifS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-erase_ifS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-erase_ifS-B' class='name expandable'>erase_if$B</a>( <span class='pre'>Block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes all the array elements that meet the condition specified by the block. ...</div><div class='long'><p>Deletes all the array elements that meet the condition specified by the block.\nDeletion is made in block call. Not at the end</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnumbers.erase_if$B(function(obj){ return obj &gt; 2 })\n//=&gt; [1,2]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Block</span> : function(Object):boolean<div class='sub-desc'><p>that must contain a condition by which the element will be erased or not.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-every' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-every' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-every' class='name expandable'>every</a>( <span class='pre'>callback, [thisObject]</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests whether all elements in the array pass the test implemented\nby the provided function. ...</div><div class='long'><p>Tests whether all elements in the array pass the test implemented\nby the provided function.</p>\n\n<p><code>every</code> executes the provided <code>callback</code> function once for each element\npresent in the array until it finds one where <code>callback</code> returns a\nfalse value. If such an element is found, the <code>every</code> method\nimmediately returns false. Otherwise, if <code>callback</code> returned a true\nvalue for all elements, <code>every</code> will return true. <code>callback</code> is invoked\nonly for indexes of the array which have assigned values; it is not\ninvoked for indexes which have been deleted or which have never\nbeen assigned values.</p>\n\n<p>If a <code>thisObject</code> parameter is provided to <code>every</code>, it will be used as\nthe <code>this</code> for each invocation of the callback. If it is not\nprovided, or is <code>null</code>, the global object associated with callback is\nused instead.</p>\n\n<p><code>every</code> does not mutate the array on which it is called.</p>\n\n<p>The range of elements processed by <code>every</code> is set before the first\ninvocation of callback. Elements which are appended to the array\nafter the call to every begins will not be visited by <code>callback</code>. If\nexisting elements of the array are changed, their value as passed\nto <code>callback</code> will be the value at the time <code>every</code> visits them;\nelements that are deleted are not visited.</p>\n\n<p><code>every</code> acts like the \"for all\" quantifier in mathematics. In\nparticular, for an empty array, it returns true. (It is vacuously\ntrue that all elements of the empty set satisfy any given\ncondition.)</p>\n\n<p>The following example tests whether all elements in the array are\nbigger than 10.</p>\n\n<pre><code>function isBigEnough(element, index, array) {\n  return (element &gt;= 10);\n}\nvar passed = [12, 5, 8, 130, 44].every(isBigEnough);\n// passed is false\npassed = [12, 54, 18, 130, 44].every(isBigEnough);\n// passed is true\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to test for each element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The element value.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The element index.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array being traversed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Should return true when element passes the test.</p>\n</div></li></ul></div></li><li><span class='pre'>thisObject</span> : Object (optional)<div class='sub-desc'><p>Object to use as <code>this</code> when executing <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True when all elements pass the test.</p>\n</div></li></ul></div></div></div><div id='method-filter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-filter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-filter' class='name expandable'>filter</a>( <span class='pre'>callback, [thisObject]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new array with all elements that pass the test\nimplemented by the provided function. ...</div><div class='long'><p>Creates a new array with all elements that pass the test\nimplemented by the provided function.</p>\n\n<p><code>filter</code> calls a provided <code>callback</code> function once for each element in\nan array, and constructs a new array of all the values for which\n<code>callback</code> returns a true value. <code>callback</code> is invoked only for indexes\nof the array which have assigned values; it is not invoked for\nindexes which have been deleted or which have never been assigned\nvalues. Array elements which do not pass the <code>callback</code> test are\nsimply skipped, and are not included in the new array.</p>\n\n<p>If a <code>thisObject</code> parameter is provided to <code>filter</code>, it will be\nused as the <code>this</code> for each invocation of the <code>callback</code>. If it is not\nprovided, or is <code>null</code>, the global object associated with callback is\nused instead.</p>\n\n<p><code>filter</code> does not mutate the array on which it is called.</p>\n\n<p>The range of elements processed by <code>filter</code> is set before the first\ninvocation of <code>callback</code>. Elements which are appended to the array\nafter the call to <code>filter</code> begins will not be visited by <code>callback</code>. If\nexisting elements of the array are changed, or deleted, their value\nas passed to <code>callback</code> will be the value at the time <code>filter</code> visits\nthem; elements that are deleted are not visited.</p>\n\n<p>The following example uses filter to create a filtered array that\nhas all elements with values less than 10 removed.</p>\n\n<pre><code>function isBigEnough(element, index, array) {\n  return (element &gt;= 10);\n}\nvar filtered = [12, 5, 8, 130, 44].filter(isBigEnough);\n// filtered is [12, 130, 44]\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to test for each element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The element value.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The element index.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array being traversed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Should return true when element passes the test.</p>\n</div></li></ul></div></li><li><span class='pre'>thisObject</span> : Object (optional)<div class='sub-desc'><p>Object to use as <code>this</code> when executing <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array of elements that passed the test.</p>\n</div></li></ul></div></div></div><div id='method-first' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-first' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-first' class='name expandable'>first</a>( <span class='pre'>Position</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the first element or elements of the array -it will depend on the number of elements meeting the parameters. ...</div><div class='long'><p>Returns the first element or elements of the array -it will depend on the number of elements meeting the parameters.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nfilterNumbers = numbers.first(3)\n//=&gt; [1,2,3]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Position</span> : Number<div class='sub-desc'><p>to end including the elements in the returned array</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns the first element or elements of the array</p>\n</div></li></ul></div></div></div><div id='method-flatten' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-flatten' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-flatten' class='name expandable'>flatten</a>( <span class='pre'>level</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Transforms an array that contains other arrays in a single array with the data of all of them\n\nExample\n\nvar numbers =...</div><div class='long'><p>Transforms an array that contains other arrays in a single array with the data of all of them</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [[1,2],[3,4],[5,6]]\nnumbers.flatten()\n//=&gt; [1,2,3,4,5,6]\n\nvar numbers = [[1,2,[3,4,5,6]]]\nnumbers.flatten(1)\n//=&gt; [1,2,[3,4,5,6]]\n\nvar numbers = [1,[2,[3,[4,[5,6]]]]]\nnumbers.flatten(3)\n//=&gt; [1,2,3,4,[5,6]]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>The level to stop flatting objects</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns an array with the elements</p>\n</div></li></ul></div></div></div><div id='method-forEach' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-forEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-forEach' class='name expandable'>forEach</a>( <span class='pre'>callback, [thisArg]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a provided function once per array element. ...</div><div class='long'><p>Executes a provided function once per array element.</p>\n\n<p><code>forEach</code> executes the provided function (<code>callback</code>) once for each element present in the array. <code>callback</code>\nis invoked only for indexes of the array which have assigned values; it is not invoked for indexes which\nhave been deleted or which have never been assigned values.</p>\n\n<p>If a <code>thisArg</code> parameter is provided to <code>forEach</code>, it will be used as the <code>this</code> value for each <code>callback</code>\ninvocation as if <code>callback.call(thisArg, element, index, array)</code> was called. If <code>thisArg</code> is <code>undefined</code> or\n<code>null</code>, the <code>this</code> value within the function depends on whether the function is in strict mode or not\n(passed value if in strict mode, global object if in non-strict mode).</p>\n\n<p>The <code>range</code> of elements processed by <code>forEach</code> is set before the first invocation of <code>callback</code>. Elements\nwhich are appended to the array after the call to <code>forEach</code> begins will not be visited by <code>callback</code>. If\nexisting elements of the array are changed, or deleted, their value as passed to callback will be the\nvalue at the time <code>forEach</code> visits them; elements that are deleted are not visited.</p>\n\n<p>The following code logs a line for each element in an array:</p>\n\n<pre><code>function logArrayElements(element, index, array) {\n    console.log(\"a[\" + index + \"] = \" + element);\n}\n[2, 5, 9].forEach(logArrayElements);\n// logs:\n// a[0] = 2\n// a[1] = 5\n// a[2] = 9\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to execute for each element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The element value.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The element index.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array being traversed.</p>\n</div></li></ul></div></li><li><span class='pre'>thisArg</span> : Object (optional)<div class='sub-desc'><p>Object to use as <code>this</code> when executing <code>callback</code>.</p>\n</div></li></ul></div></div></div><div id='method-go' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-go' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-go' class='name expandable'>go</a>( <span class='pre'>index</span> ) : Array | InterleavedArray<span class=\"signature\"></span></div><div class='description'><div class='short'>Gains access to a subarray\n\nExample\n\nvar a = new InterleavedArray(4, [3, [2, 5]], 2, 1)\n\na.go().inspect()\n//=&gt; 0: ...</div><div class='long'><p>Gains access to a subarray</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new InterleavedArray(4, [3, [2, 5]], 2, 1)\n\na.go().inspect()\n//=&gt; 0: 4\n//=&gt; 0.1: 3\n//=&gt; 0.1.1: 2\n//=&gt; 0.1.2: 5\n//=&gt; 1: 2\n//=&gt; 2: 1\n\na.go(0).inspect()\n//=&gt; 0: 3\n//=&gt; 0.1: 2\n//=&gt; 0.2: 5\n\na.go(0.1).inspect()\n//=&gt; 0: 2\n//=&gt; 1: 5\n\nvar a = new InterleavedArray(4, [3, [2, [5]]], 2, 1)\na.go(\"1.1.2\").inspect()\n//=&gt; 0: 5\n//=&gt; 0.1: 4\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : String | Number<div class='sub-desc'><p>Index of subarray</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array | InterleavedArray</span><div class='sub-desc'><p>Nested array between two integer positions.</p>\n</div></li></ul></div></div></div><div id='method-hover' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-hover' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-hover' class='name expandable'>hover</a>( <span class='pre'>index</span> ) : Array | InterleavedArray<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as go but returns one step before. ...</div><div class='long'><p>Same as <a href=\"#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-go\" rel=\"Kernel.Foundation.Enumerable.InterleavedArray-method-go\" class=\"docClass\">go</a> but returns one step before.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : String<div class='sub-desc'><p>index where the subarray is contained</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array | InterleavedArray</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-includeS-U' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-includeS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-includeS-U' class='name expandable'>include$U</a>( <span class='pre'>Object</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Searches every item of the array for the object passed as parameter. ...</div><div class='long'><p>Searches every item of the array for the object passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.include$U(3)\n// =&gt; true\n\nvar names = [\"carlos\",\"jordan\",\"david\",\"susan\"]\nnewName = names.include$U('susan')\n// =&gt; true\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object<div class='sub-desc'><p>that the method will search for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns the result of the search. If item is included, returns true. If not, false.</p>\n</div></li></ul></div></div></div><div id='method-index' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-index' class='name expandable'>index</a>( <span class='pre'>Object</span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds the first position of a given object or the position of the first matching\na given criteria. ...</div><div class='long'><p>Finds the first position of a given object or the position of the first matching\na given criteria.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnumbers.index(3)\n//=&gt; 2\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object | function(Object): boolean<div class='sub-desc'><p>that the method will search for,\n                                                   or matching criteria.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'><p>Position of the element we are looking for. null if not found.</p>\n</div></li></ul></div></div></div><div id='method-indexOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-indexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-indexOf' class='name expandable'>indexOf</a>( <span class='pre'>searchElement, [fromIndex]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the first index at which a given element can be found in the array, or -1 if it is not present. ...</div><div class='long'><p>Returns the first index at which a given element can be found in the array, or -1 if it is not present.</p>\n\n<p><code>indexOf</code> compares <code>searchElement</code> to elements of the Array using strict equality (the same method used\nby the <code>===</code>, or triple-equals, operator).</p>\n\n<pre><code>var array = [2, 5, 9];\nvar index = array.indexOf(2);\n// index is 0\nindex = array.indexOf(7);\n// index is -1\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>searchElement</span> : Mixed<div class='sub-desc'><p>Element to locate in the array.</p>\n</div></li><li><span class='pre'>fromIndex</span> : Number (optional)<div class='sub-desc'><p>The index at which to begin the search. Defaults to 0, i.e. the whole array\nwill be searched. If the index is greater than or equal to the length of the array, -1 is returned, i.e.\nthe array will not be searched. If negative, it is taken as the offset from the end of the array. Note\nthat even when the index is negative, the array is still searched from front to back. If the calculated\nindex is less than 0, the whole array will be searched.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The index of element found or -1.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.CoreExt.Array-method-indexOf\" rel=\"Kernel.CoreExt.Array-method-indexOf\" class=\"docClass\">Kernel.CoreExt.Array.indexOf</a></p></div></div></div><div id='method-infiltrate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-infiltrate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-infiltrate' class='name expandable'>infiltrate</a>( <span class='pre'>position, elements</span> ) : InterleavedArray<span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Sets an element or an array as a subelement. ...</div><div class='long'><p>Sets an element or an array as a subelement.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new InterleavedArray(4, 3, [2, 5], 2, 1)\na.infiltrate(1, [2, [3, [5, 7]]])\n//=&gt; {\n//=&gt;    0: 4,\n//=&gt;    1: 3,\n//=&gt;    1.1: 2,\n//=&gt;    1.2: 5,\n//=&gt;    1.3: 2,\n//=&gt;    1.3.1: 3,\n//=&gt;    1.3.1.1: 5,\n//=&gt;    1.3.1.2: 7,\n//=&gt;    2: 2,\n//=&gt;    3: 1\n//=&gt; }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>position</span> : Number<div class='sub-desc'><p>Major number for all subelements.</p>\n</div></li><li><span class='pre'>elements</span> : Object | InterleavedArray<div class='sub-desc'><p>Variadic elements to insert.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>InterleavedArray</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-inject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-inject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-inject' class='name expandable'>inject</a>( <span class='pre'>init_value, block</span> ) : Number/Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Make a whip round through all parishioners (this array elements). ...</div><div class='long'><p>Make a whip round through all parishioners (this array elements).</p>\n\n<h3>Example</h3>\n\n<pre><code>[1,2,3].inject(0, function(element, accumulator) {\n    return element + acumulator\n});\n//=&gt; 6\n\n[1, 2, 7, 2, 3].inject(0, function(element, accumulator){\n    return element &gt; acumulator ? element : accumulator\n})\n//=&gt; 7\n\n[1, 2, 3].inject( {even: [], odd: []}, function(el, ac){\n    if (el % 2)\n       ac.odd.push(el)\n    else\n       ac.even.push(el)\n    return ac\n})\n//=&gt; {odd: [1, 3], even: [2]}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>init_value</span> : Number|Object<div class='sub-desc'><p>Initial value or collect box</p>\n</div></li><li><span class='pre'>block</span> : Function<div class='sub-desc'><p>Callback</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : <div class='sub-desc'><p>Each of the elements\n                                     (one per interaction) of this array.</p>\n</div></li><li><span class='pre'>accumulator</span> : Number|Object<div class='sub-desc'><p>Collect box to hold the results.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number|Object</span><div class='sub-desc'><p>Next value of block.accumulator.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number/Object</span><div class='sub-desc'><p>Last value of block.return</p>\n</div></li></ul></div></div></div><div id='method-inject_with_index' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-inject_with_index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-inject_with_index' class='name expandable'>inject_with_index</a>( <span class='pre'>init_value, block</span> ) : Number/Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as inject but block recieves an extra value: array index. ...</div><div class='long'><p>Same as <a href=\"#!/api/Kernel.CoreExt.Array-method-inject\" rel=\"Kernel.CoreExt.Array-method-inject\" class=\"docClass\">inject</a> but block recieves an extra value: array index.</p>\n\n<h3>Example:</h3>\n\n<pre><code>[2, 2, 2, 2, 2].inject_with_index(0, function(element, index, accumulator) {\n    return accumulator + Math.pow(element, index)\n})\n//   1 + 2 + 4 + 8 + 16\n//=&gt; 31\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>init_value</span> : Number|Object<div class='sub-desc'><p>Initial value or collect box</p>\n</div></li><li><span class='pre'>block</span> : Function<div class='sub-desc'><p>Callback</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : <div class='sub-desc'><p>Each of the elements\n                                     (one per interaction) of this array.</p>\n</div></li><li><span class='pre'>accumulator</span> : Number|Object<div class='sub-desc'><p>Collect box to hold the results.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number|Object</span><div class='sub-desc'><p>Next value of block.accumulator.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number/Object</span><div class='sub-desc'><p>Last value of block.return</p>\n</div></li></ul></div></div></div><div id='method-inspect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-inspect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-inspect' class='name expandable'>inspect</a>( <span class='pre'>index</span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the keys and value in the InterleavedArray\n\nExample\n\nvar a = new InterleavedArray(1,[2, [3, 5]], [5, 1],3,[4])...</div><div class='long'><p>Return the keys and value in the InterleavedArray</p>\n\n<h2>Example</h2>\n\n<p>var a = new InterleavedArray(1,[2, [3, 5]], [5, 1],3,[4])\na.inspect()\n//=> 0: 1\n     0.1: 2\n     0.1.1: 3\n     0.1.2: 5\n     1: undefined\n     1.1: 5\n     1.2: 1\n     2: 3\n     2.1: 4</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : String | void<div class='sub-desc'><p>The position index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>txt All keys and values in the InterleavedArray.</p>\n</div></li></ul></div></div></div><div id='method-join' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-join' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-join' class='name expandable'>join</a>( <span class='pre'>separator</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Joins all elements of an array into a string. ...</div><div class='long'><p>Joins all elements of an array into a string.</p>\n\n<p>The string conversions of all array elements are joined into one string.</p>\n\n<p>The following example creates an array, <code>a</code>, with three elements, then joins the array three times:\nusing the default separator, then a comma and a space, and then a plus.</p>\n\n<pre><code>var a = new Array(\"Wind\",\"Rain\",\"Fire\");\nvar myVar1 = a.join();      // assigns \"Wind,Rain,Fire\" to myVar1\nvar myVar2 = a.join(\", \");  // assigns \"Wind, Rain, Fire\" to myVar2\nvar myVar3 = a.join(\" + \"); // assigns \"Wind + Rain + Fire\" to myVar3\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>separator</span> : String<div class='sub-desc'><p>Specifies a string to separate each element of the array. The separator\nis converted to a string if necessary. If omitted, the array elements are separated with a comma.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string of the array elements.</p>\n</div></li></ul></div></div></div><div id='method-keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-keys' class='name expandable'>keys</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the keys in the InterleavedArray\n\nExample\n\nvar a = new InterleavedArray(0, 1, [5, [[7], 8, 9], 4)\na.keys()\n//=...</div><div class='long'><p>Return the keys in the InterleavedArray</p>\n\n<h3>Example</h3>\n\n<p>var a = new InterleavedArray(0, 1, [5, [[7], 8, 9], 4)\na.keys()\n//=> [\"0\", \"1\", \"1.1\", \"1.1.1\", \"1.2\", \"1.3\", \"2\"]</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>array The keys in order.</p>\n</div></li></ul></div></div></div><div id='method-last' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-last' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-last' class='name expandable'>last</a>( <span class='pre'>Position</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the element or elements of an array starting from the end. ...</div><div class='long'><p>Returns the element or elements of an array starting from the end.\nIt will depend on the number of elements meeting the parameters.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nfilterNumbers = numbers.last(6)\n//=&gt; [4,5,6,7,8,9]\n\nvar numbers = [1,2,3,4,5,6,7,8,9]\nfilterNumbers = numbers.last(2)\n//=&gt; [8,9]\n\nvar numbers = []\nfilterNumbers = numbers.last(2)\n//=&gt; null\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Position</span> : Number<div class='sub-desc'><p>to start including the elements in the returned array</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns the last element or elements of the array</p>\n</div></li></ul></div></div></div><div id='method-lastIndexOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-lastIndexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-lastIndexOf' class='name expandable'>lastIndexOf</a>( <span class='pre'>searchElement, [fromIndex]</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last index at which a given element can be found in the array, or -1 if it is not present. ...</div><div class='long'><p>Returns the last index at which a given element can be found in the array, or -1 if it is not present.\nThe array is searched backwards, starting at <code>fromIndex</code>.</p>\n\n<p><code>lastIndexOf</code> compares <code>searchElement</code> to elements of the Array using strict equality (the same method\nused by the <code>===</code>, or triple-equals, operator).</p>\n\n<pre><code>var array = [2, 5, 9, 2];\nvar index = array.lastIndexOf(2);\n// index is 3\nindex = array.lastIndexOf(7);\n// index is -1\nindex = array.lastIndexOf(2, 3);\n// index is 3\nindex = array.lastIndexOf(2, 2);\n// index is 0\nindex = array.lastIndexOf(2, -2);\n// index is 0\nindex = array.lastIndexOf(2, -1);\n// index is 3\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>searchElement</span> : Mixed<div class='sub-desc'><p>Element to locate in the array.</p>\n</div></li><li><span class='pre'>fromIndex</span> : Number (optional)<div class='sub-desc'><p>The index at which to start searching backwards. Defaults to the array's\nlength, i.e. the whole array will be searched. If the index is greater than or equal to the length of\nthe array, the whole array will be searched. If negative, it is taken as the offset from the end of the\narray. Note that even when the index is negative, the array is still searched from back to front. If\nthe calculated index is less than 0, -1 is returned, i.e. the array will not be searched.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The index of element found or -1.</p>\n</div></li></ul></div></div></div><div id='method-map' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-map' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-map' class='name expandable'>map</a>( <span class='pre'>callback, [thisObject]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new array with the results of calling a provided function\non every element in this array. ...</div><div class='long'><p>Creates a new array with the results of calling a provided function\non every element in this array.</p>\n\n<p><code>map</code> calls a provided <code>callback</code> function once for each element in\nan array, in order, and constructs a new array from the\nresults. <code>callback</code> is invoked only for indexes of the array which\nhave assigned values; it is not invoked for indexes which have been\ndeleted or which have never been assigned values.</p>\n\n<p>If a <code>thisArg</code> parameter is provided to map, it will be used as the\n<code>this</code> for each invocation of the <code>callback</code>. If it is not provided, or\nis <code>null</code>, the global object associated with callback is used\ninstead.</p>\n\n<p><code>map</code> does not mutate the array on which it is called.</p>\n\n<p>The range of elements processed by <code>map</code> is set before the first\ninvocation of <code>callback</code>. Elements which are appended to the array\nafter the call to <code>map</code> begins will not be visited by <code>callback</code>. If\nexisting elements of the array are changed, or deleted, their value\nas passed to <code>callback</code> will be the value at the time <code>map</code> visits\nthem; elements that are deleted are not visited.</p>\n\n<p>The following code creates an array of \"plural\" forms of nouns from\nan array of their singular forms.</p>\n\n<pre><code>function fuzzyPlural(single) {\n  var result = single.replace(/o/g, 'e');\n  if( single === 'kangaroo'){\n    result += 'se';\n  }\n  return result;\n}\n\nvar words = [\"foot\", \"goose\", \"moose\", \"kangaroo\"];\nconsole.log(words.map(fuzzyPlural));\n\n// [\"feet\", \"geese\", \"meese\", \"kangareese\"]\n</code></pre>\n\n<p>The following code takes an array of numbers and creates a new\narray containing the square roots of the numbers in the first\narray.</p>\n\n<pre><code>var numbers = [1, 4, 9];\nvar roots = numbers.map(Math.sqrt);\n// roots is now [1, 2, 3], numbers is still [1, 4, 9]\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function that produces an element of the new Array\nfrom an element of the current one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The element value.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The element index.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array being traversed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Should return true when element passes the test.</p>\n</div></li></ul></div></li><li><span class='pre'>thisObject</span> : Object (optional)<div class='sub-desc'><p>Object to use as <code>this</code> when executing <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array of the return values of <code>callback</code> function.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.CoreExt.Array-method-map\" rel=\"Kernel.CoreExt.Array-method-map\" class=\"docClass\">Kernel.CoreExt.Array.map</a></p></div></div></div><div id='method-mapS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-mapS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-mapS-B' class='name expandable'>map$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.\n(see Array#collect)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-merge' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-merge' class='name expandable'>merge</a>( <span class='pre'>Array</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Joins to Arrays. ...</div><div class='long'><p>Joins to Arrays.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3]\nvar letters = [\"A\", \"B\", \"C\"]\nvar merged = numbers.merge(letters)\n//=&gt; merged = [1, 2, 3, \"A\", \"B\", \"C\"]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Array</span> : Array<div class='sub-desc'><p>that needs to be merged</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns an array made out of two arrays</p>\n</div></li></ul></div></div></div><div id='method-pop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-pop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-pop' class='name expandable'>pop</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the last element from an array and returns its value to the caller. ...</div><div class='long'><p>Removes the last element from an array and returns its value to the caller.</p>\n\n<p><code>pop</code> is intentionally generic; this method can be called or applied to objects resembling\narrays. Objects which do not contain a length property reflecting the last in a series of\nconsecutive, zero-based numerical properties may not behave in any meaningful manner.</p>\n\n<pre><code>var myFish = [\"angel\", \"clown\", \"mandarin\", \"surgeon\"];\nvar popped = myFish.pop();\nalert(popped); // Alerts 'surgeon'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The last element in the array</p>\n</div></li></ul></div></div></div><div id='method-product' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-product' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-product' class='name expandable'>product</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the cartesian product of two matrices. ...</div><div class='long'><p>Returns the cartesian product of two matrices.</p>\n\n<h3>Example</h3>\n\n<pre><code>[1,2,3].product([4,5])\n//=&gt; [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]\n\n[1,2].product([1,2])\n//=&gt; [[1,1],[1,2],[2,1],[2,2]]\n\n[1,2].product([3,4],[5,6])\n//=&gt; [[1,3,5],[1,3,6],[1,4,5],[1,4,6],\n//=&gt;  [2,3,5],[2,3,6],[2,4,5],[2,4,6]]\n\n[1,2].product()\n//=&gt; [[1],[2]]\n\n[1,2].product([])\n//=&gt; []\n\n[1,2,3].product()\n//=&gt; [[1], [2], [3]]\n</code></pre>\n</div></div></div><div id='method-push' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-push' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-push' class='name expandable'>push</a>( <span class='pre'>elements</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds one or more elements to the end of an array and returns the new length of the array. ...</div><div class='long'><p>Adds one or more elements to the end of an array and returns the new length of the array.</p>\n\n<p><code>push</code> is intentionally generic. This method can be called or applied to objects resembling\narrays. The push method relies on a length property to determine where to start inserting\nthe given values. If the length property cannot be converted into a number, the index used\nis 0. This includes the possibility of length being nonexistent, in which case length will\nalso be created.</p>\n\n<p>The only native, array-like objects are strings, although they are not suitable in\napplications of this method, as strings are immutable.</p>\n\n<h3>Adding elements to an array</h3>\n\n<p>The following code creates the sports array containing two elements, then appends two elements\nto it. After the code executes, sports contains 4 elements: \"soccer\", \"baseball\", \"football\"\nand \"swimming\".</p>\n\n<pre><code>var sports = [\"soccer\", \"baseball\"];\nsports.push(\"football\", \"swimming\");\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elements</span> : Object...<div class='sub-desc'><p>The elements to add to the end of the array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The new length property of the object upon which the method was called.</p>\n</div></li></ul></div></div></div><div id='method-rassoc' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-rassoc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-rassoc' class='name expandable'>rassoc</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Using arrays of arrays as Hashes, seeks in the second\nelement for a given key. ...</div><div class='long'><p>Using arrays of arrays as Hashes, seeks in the second\nelement for a given key.</p>\n\n<h3>Example</h3>\n\n<pre><code>a = [ [ 1, \"one\"], [2, \"two\"], [3, \"three\"], [\"ii\", \"two\"] ]\n\na.rassoc(\"two\")\n//=&gt; [2, \"two\"]\n\na.rassoc(\"four\")\n//=&gt; null\n</code></pre>\n</div></div></div><div id='method-reduce' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-reduce' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-reduce' class='name expandable'>reduce</a>( <span class='pre'>callback, [initialValue]</span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Applies a function against an accumulator and each value of the\narray (from left-to-right) as to reduce it to a singl...</div><div class='long'><p>Applies a function against an accumulator and each value of the\narray (from left-to-right) as to reduce it to a single value.</p>\n\n<p><code>reduce</code> executes the <code>callback</code> function once for each element\npresent in the array, excluding holes in the array.</p>\n\n<p>The first time the <code>callback</code> is called, <code>previousValue</code> and\n<code>currentValue</code> can be one of two values. If <code>initialValue</code> is\nprovided in the call to <code>reduce</code>, then <code>previousValue</code> will be equal to\n<code>initialValue</code> and <code>currentValue</code> will be equal to the first value in\nthe array. If no <code>initialValue</code> was provided, then <code>previousValue</code> will\nbe equal to the first value in the array and <code>currentValue</code> will be\nequal to the second.</p>\n\n<p>Suppose the following use of reduce occurred:</p>\n\n<pre><code>[0,1,2,3,4].reduce(function(previousValue, currentValue, index, array){\n  return previousValue + currentValue;\n});\n</code></pre>\n\n<p>The callback would be invoked four times, with the arguments and\nreturn values in each call being as follows:</p>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left;\">             </th>\n<th style=\"text-align:left;\"> previousValue </th>\n<th style=\"text-align:left;\"> currentValue </th>\n<th style=\"text-align:left;\"> index </th>\n<th style=\"text-align:left;\"> array       </th>\n<th style=\"text-align:left;\"> return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\"> first call  </td>\n<td style=\"text-align:left;\"> 0             </td>\n<td style=\"text-align:left;\"> 1            </td>\n<td style=\"text-align:left;\"> 1     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 1</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> second call </td>\n<td style=\"text-align:left;\"> 1             </td>\n<td style=\"text-align:left;\"> 2            </td>\n<td style=\"text-align:left;\"> 2     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 3</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> third call  </td>\n<td style=\"text-align:left;\"> 3             </td>\n<td style=\"text-align:left;\"> 3            </td>\n<td style=\"text-align:left;\"> 3     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 6</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> fourth call </td>\n<td style=\"text-align:left;\"> 6             </td>\n<td style=\"text-align:left;\"> 4            </td>\n<td style=\"text-align:left;\"> 4     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 10</td>\n</tr>\n</tbody>\n</table>\n\n\n<p>The value returned by <code>reduce</code> would be that of the last callback\ninvocation (10).</p>\n\n<p>If you were to provide an initial value as the second argument to\nreduce, the result would look like this:</p>\n\n<pre><code>[0,1,2,3,4].reduce(function(previousValue, currentValue, index, array){\n  return previousValue + currentValue;\n}, 10);\n</code></pre>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left;\">             </th>\n<th style=\"text-align:left;\"> previousValue </th>\n<th style=\"text-align:left;\"> currentValue </th>\n<th style=\"text-align:left;\"> index </th>\n<th style=\"text-align:left;\"> array       </th>\n<th style=\"text-align:left;\"> return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\"> first call  </td>\n<td style=\"text-align:left;\"> 10            </td>\n<td style=\"text-align:left;\"> 0            </td>\n<td style=\"text-align:left;\"> 0     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 10</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> second call </td>\n<td style=\"text-align:left;\"> 10            </td>\n<td style=\"text-align:left;\"> 1            </td>\n<td style=\"text-align:left;\"> 1     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 11</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> third call  </td>\n<td style=\"text-align:left;\"> 11            </td>\n<td style=\"text-align:left;\"> 2            </td>\n<td style=\"text-align:left;\"> 2     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 13</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> fourth call </td>\n<td style=\"text-align:left;\"> 13            </td>\n<td style=\"text-align:left;\"> 3            </td>\n<td style=\"text-align:left;\"> 3     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 16</td>\n</tr>\n<tr>\n<td style=\"text-align:left;\"> fifth call  </td>\n<td style=\"text-align:left;\"> 16            </td>\n<td style=\"text-align:left;\"> 4            </td>\n<td style=\"text-align:left;\"> 4     </td>\n<td style=\"text-align:left;\"> [0,1,2,3,4] </td>\n<td style=\"text-align:left;\"> 20</td>\n</tr>\n</tbody>\n</table>\n\n\n<p>The value returned by <code>reduce</code> this time would be, of course, 20.</p>\n\n<p>Example: Sum up all values within an array:</p>\n\n<pre><code>var total = [0, 1, 2, 3].reduce(function(a, b) {\n    return a + b;\n});\n// total == 6\n</code></pre>\n\n<p>Example: Flatten an array of arrays:</p>\n\n<pre><code>var flattened = [[0, 1], [2, 3], [4, 5]].reduce(function(a, b) {\n    return a.concat(b);\n});\n// flattened is [0, 1, 2, 3, 4, 5]\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to execute on each value in the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>previousValue</span> : Mixed<div class='sub-desc'><p>The value previously returned in the last\ninvocation of the <code>callback</code>, or <code>initialValue</code>, if supplied.</p>\n</div></li><li><span class='pre'>currentValue</span> : Mixed<div class='sub-desc'><p>The current element being processed in the array.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index of the current element being processed in the array.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array <code>reduce</code> was called upon.</p>\n</div></li></ul></div></li><li><span class='pre'>initialValue</span> : Mixed (optional)<div class='sub-desc'><p>Object to use as the first argument to the first call\nof the <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The value returned by final invocation of the <code>callback</code>.</p>\n</div></li></ul></div></div></div><div id='method-reduceRight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-reduceRight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-reduceRight' class='name expandable'>reduceRight</a>( <span class='pre'>callback, [initialValue]</span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Applies a function simultaneously against two values of the array\n(from right-to-left) as to reduce it to a single va...</div><div class='long'><p>Applies a function simultaneously against two values of the array\n(from right-to-left) as to reduce it to a single value.</p>\n\n<p><code>reduceRight</code> executes the <code>callback</code> function once for each\nelement present in the array, excluding holes in the array.</p>\n\n<p>The first time the <code>callback</code> is called, <code>previousValue</code> and\n<code>currentValue</code> can be one of two values. If <code>initialValue</code> is\nprovided in the call to <code>reduceRight</code>, then <code>previousValue</code> will be equal to\n<code>initialValue</code> and <code>currentValue</code> will be equal to the last value in\nthe array. If no <code>initialValue</code> was provided, then <code>previousValue</code> will\nbe equal to the last value in the array and <code>currentValue</code> will be\nequal to the second-to-last value.</p>\n\n<p>Some example run-throughs of the function would look like this:</p>\n\n<pre><code>[0, 1, 2, 3, 4].reduceRight(function(previousValue, currentValue, index, array) {\n    return previousValue + currentValue;\n});\n\n// First call\npreviousValue = 4, currentValue = 3, index = 3\n\n// Second call\npreviousValue = 7, currentValue = 2, index = 2\n\n// Third call\npreviousValue = 9, currentValue = 1, index = 1\n\n// Fourth call\npreviousValue = 10, currentValue = 0, index = 0\n\n// array is always the object [0,1,2,3,4] upon which reduceRight was called\n\n// Return Value: 10\n</code></pre>\n\n<p>And if you were to provide an initialValue, the result would look like this:</p>\n\n<pre><code>[0, 1, 2, 3, 4].reduceRight(function(previousValue, currentValue, index, array) {\n    return previousValue + currentValue;\n}, 10);\n\n// First call\npreviousValue = 10, currentValue = 4, index = 4\n\n// Second call\npreviousValue = 14, currentValue = 3, index = 3\n\n// Third call\npreviousValue = 17, currentValue = 2, index = 2\n\n// Fourth call\npreviousValue = 19, currentValue = 1, index = 1\n\n// Fifth call\npreviousValue = 20, currentValue = 0, index = 0\n\n// array is always the object [0,1,2,3,4] upon which reduceRight was called\n\n// Return Value: 20\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to execute on each value in the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>previousValue</span> : Mixed<div class='sub-desc'><p>The value previously returned in the last\ninvocation of the <code>callback</code>, or <code>initialValue</code>, if supplied.</p>\n</div></li><li><span class='pre'>currentValue</span> : Mixed<div class='sub-desc'><p>The current element being processed in the array.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index of the current element being processed in the array.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array <code>reduceRight</code> was called upon.</p>\n</div></li></ul></div></li><li><span class='pre'>initialValue</span> : Mixed (optional)<div class='sub-desc'><p>Object to use as the first argument to the first call\nof the <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The value returned by final invocation of the <code>callback</code>.</p>\n</div></li></ul></div></div></div><div id='method-replace' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-replace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-replace' class='name expandable'>replace</a>( <span class='pre'>Array</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Replaces the array content with the array passed as parameter. ...</div><div class='long'><p>Replaces the array content with the array passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.replace([\"a\",\"b\",\"c\"])\n// =&gt; [\"a\",\"b\",\"c\"]\n\nvar numbers = [1,2,3,4,5,6,7,8,9]\nnewNumbers = numbers.replace()\n// =&gt; null\n\nvar numbers = [1,2,3,4,5,6,7,8,9]\nvar substitute = [\"a\",\"b\",\"c\"]\nnewNumbers = numbers.replace(substitute)\n// =&gt; [\"a\",\"b\",\"c\"]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Array</span> : Array<div class='sub-desc'><p>that will replace the original array. If this array is empty, the returned array will be null.</p>\n</div></li></ul></div></div></div><div id='method-reverse' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-reverse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-reverse' class='name expandable'>reverse</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Reverses the order of the elements of an array -- the first becomes the last, and the\nlast becomes the first. ...</div><div class='long'><p>Reverses the order of the elements of an array -- the first becomes the last, and the\nlast becomes the first.</p>\n\n<p>The reverse method transposes the elements of the calling array object in place, mutating the\narray, and returning a reference to the array.</p>\n\n<p>The following example creates an array myArray, containing three elements, then reverses the array.</p>\n\n<pre><code>var myArray = [\"one\", \"two\", \"three\"];\nmyArray.reverse();\n</code></pre>\n\n<p>This code changes myArray so that:</p>\n\n<ul>\n<li>myArray[0] is \"three\"</li>\n<li>myArray[1] is \"two\"</li>\n<li>myArray[2] is \"one\"</li>\n</ul>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>A reference to the array</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.CoreExt.Array-method-reverse\" rel=\"Kernel.CoreExt.Array-method-reverse\" class=\"docClass\">Kernel.CoreExt.Array.reverse</a></p></div></div></div><div id='method-reverse_each' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-reverse_each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-reverse_each' class='name expandable'>reverse_each</a>( <span class='pre'>block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Traverse every element of the array through the block in reverse order. ...</div><div class='long'><p>Traverse every element of the array through the block in reverse order.</p>\n\n<h3>Example</h3>\n\n<pre><code>var sentence   = \"\"\nvar to_my_boss = [\"job\", \"this\", \"like\", \"don\\'t\", \"I\"]\nto_my_boss.reverse_each(function(element){\n                           sentence += (element + \" \").toUpperCase()\n                        })\nsentence\n//=&gt; \"I DON'T LIKE THIS JOB \"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object)<div class='sub-desc'><p>Called once with every element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-rindex' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-rindex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-rindex' class='name expandable'>rindex</a>( <span class='pre'>Object</span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Searches an array to find the element passed as parameter and returns the position of this element,\nstarting the sear...</div><div class='long'><p>Searches an array to find the element passed as parameter and returns the position of this element,\nstarting the search from the final position of the array.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,4,3,2,1]\nnewNumbers = numbers.rindex(3)\n//=&gt; 6\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object<div class='sub-desc'><p>that the method will search for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'><p>Position of the element searched for. If not find, it will be null.</p>\n</div></li></ul></div></div></div><div id='method-rotate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-rotate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-rotate' class='name expandable'>rotate</a>( <span class='pre'>Stablishes</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Rotates the array elements stablishing as amount of rotation an index passed as parameter. ...</div><div class='long'><p>Rotates the array elements stablishing as amount of rotation an index passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var characters = [\"a\",\"b\",\"c\",\"d\"]\ncharacters.rotate(2)\n//=&gt; [\"c\",\"d\",\"a\",\"b\"]\n\nvar characters = []\ncharacters.rotate(2)\n//=&gt; null\n\nvar characters = [\"a\",\"b\",\"c\",\"d\"]\ncharacters.rotate(3)\n//=&gt; [\"d\",\"a\",\"b\",\"c\"]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Stablishes</span> : Number<div class='sub-desc'><p>the amount of the array rotation.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Items ordered.</p>\n</div></li></ul></div></div></div><div id='method-select_if' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-select_if' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-select_if' class='name expandable'>select_if</a>( <span class='pre'>block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Collects the element or elements that pass a given condition. ...</div><div class='long'><p>Collects the element or elements that pass a given condition.</p>\n\n<h3>Example</h3>\n\n<pre><code>// Return whether integer is perfect or not\nfunction is_perfect$U(integer) {\n    var factor = []\n    for (var i=1; i&lt;=integer / 2; i++)\n        if (integer % i == 0)\n            factor.push(i)\n\n    var sum = 0\n    for (var i=0; i&lt;factor.length; i++)\n        sum += factor[i]\n\n    return sum == integer\n}\n\n[3, 4, 6, 14, 21, 28].select_if(function(el){ return is_perfect$U(el) })\n//=&gt; [6, 28]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : Function<div class='sub-desc'><p>This function must return a boolean.\n                         If it returns true, the array item will be\n                         included in the final array.\n                         If not, it will be deleted.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns all items that have passed the condition.\n                 If an item can't pass the condition, it is deleted.</p>\n</div></li></ul></div></div></div><div id='method-shift' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-shift' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-shift' class='name expandable'>shift</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the first element from an array and returns that element. ...</div><div class='long'><p>Removes the first element from an array and returns that element.</p>\n\n<p>The <code>shift</code> method removes the element at the zeroeth index and shifts the values at consecutive\nindexes down, then returns the removed value.</p>\n\n<p><code>shift</code> is intentionally generic; this method can be called or applied to objects resembling\narrays. Objects which do not contain a <code>length</code> property reflecting the last in a series of\nconsecutive, zero-based numerical properties may not behave in any meaningful manner.</p>\n\n<p>The following code displays the <code>myFish</code> array before and after removing its first element. It also\ndisplays the removed element:</p>\n\n<pre><code>// assumes a println function is defined\nvar myFish = [\"angel\", \"clown\", \"mandarin\", \"surgeon\"];\nprintln(\"myFish before: \" + myFish);\nvar shifted = myFish.shift();\nprintln(\"myFish after: \" + myFish);\nprintln(\"Removed this element: \" + shifted);\n</code></pre>\n\n<p>This example displays the following:</p>\n\n<pre><code>myFish before: angel,clown,mandarin,surgeon\nmyFish after: clown,mandarin,surgeon\nRemoved this element: angel\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The first element of the array prior to shifting.</p>\n</div></li></ul></div></div></div><div id='method-shuffle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-shuffle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-shuffle' class='name expandable'>shuffle</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Shuffles the array items randomly. ...</div><div class='long'><p>Shuffles the array items randomly.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4]\nnumbers.shuffle()\n// =&gt; The same elements of the array in another order.\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Shuffled array.</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the number of elements in InterleavedArray ...</div><div class='long'><p>Return the number of elements in InterleavedArray</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-slice' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-slice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-slice' class='name expandable'>slice</a>( <span class='pre'>begin, end</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Extracts a section of an array and returns a new array. ...</div><div class='long'><p>Extracts a section of an array and returns a new array.</p>\n\n<p><code>slice</code> does not alter the original array, but returns a new \"one level deep\" copy that contains\ncopies of the elements sliced from the original array. Elements of the original array are copied\ninto the new array as follows:\n*   For object references (and not the actual object), <code>slice</code> copies object references into the\nnew array. Both the original and new array refer to the same object. If a referenced object\nchanges, the changes are visible to both the new and original arrays.\n*   For strings and numbers (not <a href=\"#!/api/Kernel.JSNative.String\" rel=\"Kernel.JSNative.String\" class=\"docClass\">Kernel.JSNative.String</a> and <a href=\"#!/api/Kernel.JSNative.Number\" rel=\"Kernel.JSNative.Number\" class=\"docClass\">Kernel.JSNative.Number</a> objects), <code>slice</code> copies strings\nand numbers into the new array. Changes to the string or number in one array does not affect the\nother array.</p>\n\n<p>If a new element is added to either array, the other array is not affected.</p>\n\n<h3>Using slice</h3>\n\n<p>In the following example, <code>slice</code> creates a new array, <code>newCar</code>, from <code>myCar</code>. Both include a\nreference to the object <code>myHonda</code>. When the color of <code>myHonda</code> is changed to purple, both arrays\nreflect the change.</p>\n\n<pre><code>// Using slice, create newCar from myCar.\nvar myHonda = { color: \"red\", wheels: 4, engine: { cylinders: 4, size: 2.2 } };\nvar myCar = [myHonda, 2, \"cherry condition\", \"purchased 1997\"];\nvar newCar = myCar.slice(0, 2);\n\n// Print the values of myCar, newCar, and the color of myHonda\n//  referenced from both arrays.\nprint(\"myCar = \" + myCar.toSource());\nprint(\"newCar = \" + newCar.toSource());\nprint(\"myCar[0].color = \" + myCar[0].color);\nprint(\"newCar[0].color = \" + newCar[0].color);\n\n// Change the color of myHonda.\nmyHonda.color = \"purple\";\nprint(\"The new color of my Honda is \" + myHonda.color);\n\n// Print the color of myHonda referenced from both arrays.\nprint(\"myCar[0].color = \" + myCar[0].color);\nprint(\"newCar[0].color = \" + newCar[0].color);\n</code></pre>\n\n<p>This script writes:</p>\n\n<pre><code>myCar = [{color:\"red\", wheels:4, engine:{cylinders:4, size:2.2}}, 2, \"cherry condition\",\n\"purchased 1997\"]\nnewCar = [{color:\"red\", wheels:4, engine:{cylinders:4, size:2.2}}, 2]\nmyCar[0].color = red\nnewCar[0].color = red\nThe new color of my Honda is purple\nmyCar[0].color = purple\nnewCar[0].color = purple\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>begin</span> : Number<div class='sub-desc'><p>Zero-based index at which to begin extraction.\nAs a negative index, <code>start</code> indicates an offset from the end of the sequence. <code>slice(-2)</code> extracts\nthe second-to-last element and the last element in the sequence</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>Zero-based index at which to end extraction. <code>slice</code> extracts up to but not\nincluding <code>end</code>.\n<code>slice(1,4)</code> extracts the second element through the fourth element (elements indexed 1, 2, and 3).\nAs a negative index, end indicates an offset from the end of the sequence. <code>slice(2,-1)</code> extracts\nthe third element through the second-to-last element in the sequence.\nIf <code>end</code> is omitted, <code>slice</code> extracts to the end of the sequence.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array from the new start position up to (but not including) the specified end position.</p>\n</div></li></ul></div></div></div><div id='method-some' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-some' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-some' class='name expandable'>some</a>( <span class='pre'>callback, [thisObject]</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests whether some element in the array passes the test implemented\nby the provided function. ...</div><div class='long'><p>Tests whether some element in the array passes the test implemented\nby the provided function.</p>\n\n<p><code>some</code> executes the <code>callback</code> function once for each element\npresent in the array until it finds one where <code>callback</code> returns a\ntrue value. If such an element is found, some immediately returns\ntrue. Otherwise, some returns false. <code>callback</code> is invoked only for\nindexes of the array which have assigned values; it is not invoked\nfor indexes which have been deleted or which have never been\nassigned values.</p>\n\n<p>If a <code>thisObject</code> parameter is provided to some, it will be used as\nthe <code>this</code> for each invocation of the <code>callback</code>. If it is not\nprovided, or is <code>null</code>, the global object associated with callback is\nused instead.</p>\n\n<p><code>some</code> does not mutate the array on which it is called.</p>\n\n<p>The range of elements processed by <code>some</code> is set before the first\ninvocation of callback. Elements that are appended to the array\nafter the call to some begins will not be visited by <code>callback</code>. If\nan existing, unvisited element of the array is changed by <code>callback</code>,\nits value passed to the visiting callback will be the value at the\ntime that <code>some</code> visits that element's index; elements that are\ndeleted are not visited.</p>\n\n<p>The following example tests whether some element in the array is\nbigger than 10.</p>\n\n<pre><code>function isBigEnough(element, index, array) {\n  return (element &gt;= 10);\n}\nvar passed = [2, 5, 8, 1, 4].some(isBigEnough);\n// passed is false\npassed = [12, 5, 8, 1, 4].some(isBigEnough);\n// passed is true\n</code></pre>\n\n<p><strong>NOTE:</strong> This method is part of the ECMAScript 5 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Function to test for each element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The element value.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The element index.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>The array being traversed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Should return true when element passes the test.</p>\n</div></li></ul></div></li><li><span class='pre'>thisObject</span> : Object (optional)<div class='sub-desc'><p>Object to use as <code>this</code> when executing <code>callback</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True when at least one element passes the test.</p>\n</div></li></ul></div></div></div><div id='method-sort' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-sort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-sort' class='name expandable'>sort</a>( <span class='pre'>compareFunction</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Sorts the elements of an array. ...</div><div class='long'><p>Sorts the elements of an array.</p>\n\n<p>If <code>compareFunction</code> is not supplied, elements are sorted by converting them to strings and\ncomparing strings in lexicographic (\"dictionary\" or \"telephone book,\" not numerical) order. For\nexample, \"80\" comes before \"9\" in lexicographic order, but in a numeric sort 9 comes before 80.</p>\n\n<p>If <code>compareFunction</code> is supplied, the array elements are sorted according to the return value of\nthe compare function. If a and b are two elements being compared, then:\nIf <code>compareFunction(a, b)</code> is less than 0, sort <code>a</code> to a lower index than <code>b</code>.\nIf <code>compareFunction(a, b)</code> returns 0, leave <code>a</code> and <code>b</code> unchanged with respect to each other, but\nsorted with respect to all different elements. Note: the ECMAscript standard does not guarantee\nthis behaviour, and thus not all browsers respect this.\nIf <code>compareFunction(a, b)</code> is greater than 0, sort <code>b</code> to a lower index than <code>a</code>.\n<code>compareFunction(a, b)</code> must always returns the same value when given a specific pair of elements a\nand b as its two arguments. If inconsistent results are returned then the sort order is undefined</p>\n\n<p>So, the compare function has the following form:</p>\n\n<pre><code>function compare(a, b)\n{\n    if (a is less than b by some ordering criterion)\n        return -1;\n    if (a is greater than b by the ordering criterion)\n       return 1;\n    // a must be equal to b\n    return 0;\n}\n</code></pre>\n\n<p>To compare numbers instead of strings, the compare function can simply subtract <code>b</code> from <code>a</code>:</p>\n\n<pre><code>function compareNumbers(a, b)\n{\nreturn a - b;\n}\n</code></pre>\n\n<p>The sort() method can be conveniently used with closures:</p>\n\n<pre><code>var numbers = [4, 2, 5, 1, 3];\nnumbers.sort(function(a, b) {\n    return a - b;\n});\nprint(numbers);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>compareFunction</span> : Function<div class='sub-desc'><p>Specifies a function that defines the sort order. If omitted, the\narray is sorted lexicographically (in dictionary order) according to the string conversion of each\nelement.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>A reference to the array</p>\n</div></li></ul></div></div></div><div id='method-sort_by' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-sort_by' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-sort_by' class='name expandable'>sort_by</a>( <span class='pre'>[Block]</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a sorted array using the mapped value returned by the block. ...</div><div class='long'><p>Returns a sorted array using the mapped value returned by the block.\nWhen no block is given then acts a Array#sort alias.</p>\n\n<h3>Example</h3>\n\n<pre><code> var cities = ['Madrid', 'barcelona', 'Valencia', 'alicante']\n cities.sort_by()\n //=&gt; [Madrid,Valencia,alicante,barcelona]\n\n cities.sort_by( function(el){\n                   return el.toLowerCase()\n                  })\n //=&gt; ['alicante', 'barcelona', 'Madrid', 'Valencia']\n\n cities.sort_by( function(el){\n                   return el.length\n                  })\n //=&gt; ['Madrid', 'Valencia', 'Barcelona']\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Block</span> : (function(Object):Object) (optional)<div class='sub-desc'><p>. Maps to provide a comparison item.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Sorted Array</p>\n</div></li></ul></div></div></div><div id='method-sort_byS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-sort_byS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-sort_byS-B' class='name expandable'>sort_by$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.\n(see Array#sort_by)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-splice' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-splice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-splice' class='name expandable'>splice</a>( <span class='pre'>index, howMany, elements</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds and/or removes elements from an array. ...</div><div class='long'><p>Adds and/or removes elements from an array.</p>\n\n<p>If you specify a different number of elements to insert than the number you're removing, the array\nwill have a different length at the end of the call.</p>\n\n<pre><code>// assumes a print function is defined\nvar myFish = [\"angel\", \"clown\", \"mandarin\", \"surgeon\"];\nprint(\"myFish: \" + myFish);\n\nvar removed = myFish.splice(2, 0, \"drum\");\nprint(\"After adding 1: \" + myFish);\nprint(\"removed is: \" + removed);\n\nremoved = myFish.splice(3, 1);\nprint(\"After removing 1: \" + myFish);\nprint(\"removed is: \" + removed);\n\nremoved = myFish.splice(2, 1, \"trumpet\");\nprint(\"After replacing 1: \" + myFish);\nprint(\"removed is: \" + removed);\n\nremoved = myFish.splice(0, 2, \"parrot\", \"anemone\", \"blue\");\nprint(\"After replacing 2: \" + myFish);\nprint(\"removed is: \" + removed);\n</code></pre>\n\n<p>This script displays:</p>\n\n<pre><code>myFish: angel,clown,mandarin,surgeon\nAfter adding 1: angel,clown,drum,mandarin,surgeon\nremoved is:\nAfter removing 1: angel,clown,drum,surgeon\nremoved is: mandarin\nAfter replacing 1: angel,clown,trumpet,surgeon\nremoved is: drum\nAfter replacing 2: parrot,anemone,blue,trumpet,surgeon\nremoved is: angel,clown\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>Index at which to start changing the array. If negative, will begin that\nmany elements from the end.</p>\n</div></li><li><span class='pre'>howMany</span> : Number<div class='sub-desc'><p>An integer indicating the number of old array elements to remove. If\n<code>howMany</code> is 0, no elements are removed. In this case, you should specify at least one new element.\nIf no <code>howMany</code> parameter is specified all elements after index are removed.</p>\n</div></li><li><span class='pre'>elements</span> : Object...<div class='sub-desc'><p>The elements to add to the array. If you don't specify any\nelements, <code>splice</code> simply removes elements from the array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>An array containing the removed elements. If only one element is removed, an array\nof one element is returned..</p>\n</div></li></ul></div></div></div><div id='method-strip_all' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-strip_all' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-strip_all' class='name expandable'>strip_all</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Searches for strings in an array. ...</div><div class='long'><p>Searches for strings in an array. Strips each of the string elements of an array.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [1,2,3,\"  4\"]\na.strip_all()\n//=&gt; [1,2,3,\"4\"]\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>A new array with stripped elements.</p>\n</div></li></ul></div></div></div><div id='method-take' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-take' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-take' class='name expandable'>take</a>( <span class='pre'>Position</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes the elements of an array from the first position to the position passed as parameter. ...</div><div class='long'><p>Takes the elements of an array from the first position to the position passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [1,2,3,4,5,4,3,2,1]\nnewNumbers = numbers.take(3)\n//=&gt; [1,2,3]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Position</span> : number<div class='sub-desc'><p>of the last element to take.</p>\n</div></li></ul></div></div></div><div id='method-take_while' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-take_while' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-take_while' class='name expandable'>take_while</a>( <span class='pre'>block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes the first elements of an array while the condition is met. ...</div><div class='long'><p>Takes the first elements of an array while the condition is met.</p>\n\n<h3>Example</h3>\n\n<pre><code> [1, 2, 2, 3, 2, 4].take_while( function(el){\n        return el &lt; 3\n      })\n //=&gt; [1, 2, 2]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : function(Object):boolean<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>First elements of an Array</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representing the array and its elements. ...</div><div class='long'><p>Returns a string representing the array and its elements. Overrides the <code>Object.prototype.toString</code>\nmethod.</p>\n\n<p>The <a href=\"#!/api/Kernel.JSNative.Array\" rel=\"Kernel.JSNative.Array\" class=\"docClass\">Kernel.JSNative.Array</a> object overrides the <code>toString</code> method of <a href=\"#!/api/Kernel.JSNative.Object\" rel=\"Kernel.JSNative.Object\" class=\"docClass\">Kernel.JSNative.Object</a>. For Array objects, the\n<code>toString</code> method joins the array and returns one string containing each array element separated by\ncommas. For example, the following code creates an array and uses <code>toString</code> to convert the array\nto a string.</p>\n\n<pre><code>var monthNames = new Array(\"Jan\",\"Feb\",\"Mar\",\"Apr\");\nmyVar = monthNames.toString(); // assigns \"Jan,Feb,Mar,Apr\" to myVar\n</code></pre>\n\n<p>JavaScript calls the <code>toString</code> method automatically when an array is to be represented as a text\nvalue or when an array is referred to in a string concatenation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The array as a string.</p>\n</div></li></ul></div></div></div><div id='method-to_a' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.InterleavedArray'>Kernel.Foundation.Enumerable.InterleavedArray</span><br/><a href='source/ll_InterleavedArray.html#Kernel-Foundation-Enumerable-InterleavedArray-method-to_a' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.InterleavedArray-method-to_a' class='name expandable'>to_a</a>( <span class='pre'>index</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts to array\n\nExample\n\nvar a = new InterleavedArray(2, [3, 5])\n//=&gt; {0: 2, 0.1: 3, 0.2: 5}\na.to_a()\n//=&gt; [...</div><div class='long'><p>Converts to array</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new InterleavedArray(2, [3, 5])\n//=&gt; {0: 2, 0.1: 3, 0.2: 5}\na.to_a()\n//=&gt; [2, [3, 5]]\na.to_a(0)\n//=&gt; [3, 5]\n\nvar a = new InterleavedArray(4, [3, [2, 5]], 2, 1)\na.to_a().toSource()\n//=&gt; [4, [3, [2, 5]], 2, 1]\n\na.to_a(0).toSource()\n//=&gt; [3, [2, 5]]\n\na.to_a(1).toSource()\n//=&gt; []\n\nvar a = new InterleavedArray(1, 4, [3, [2, 7, [5, [4] ]], 2], 1)\na.to_a(\"1.1.2\").toSource()\n//=&gt; [5, [4]]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : String | Number | undefined<div class='sub-desc'><p>The index of the position in the InterleavedArray</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>array Returns the array with data. in the InterleavedArray</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Kernel.CoreExt.Array-method-to_a\" rel=\"Kernel.CoreExt.Array-method-to_a\" class=\"docClass\">Kernel.CoreExt.Array.to_a</a></p></div></div></div><div id='method-to_v' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-to_v' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-to_v' class='name expandable'>to_v</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates  from this an array of n dimensions vectors ...</div><div class='long'><p>Creates  from this an array of n dimensions vectors</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array of vectors</p>\n</div></li></ul></div></div></div><div id='method-transpose' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-transpose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-transpose' class='name expandable'>transpose</a>( <span class='pre'>Array</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Assumes that self is an array of arrays and transposes the rows to columns. ...</div><div class='long'><p>Assumes that self is an array of arrays and transposes the rows to columns.</p>\n\n<h3>Example</h3>\n\n<pre><code>var numbers = [[1,2],[3,4],[5,6]]\nnumbers.transpose()\n//=&gt; [[1,3,5],[2,4,6]]\n\nvar numbers = [[1,2,3],[1,2,3],[1,2,3]]\nnumbers.transpose()\n//=&gt; [[1,1,1],[2,2,2],[3,3,3]]\n\nvar words = [['hola','pedro','cristobal'],['adios','juan','colon']]\nwords.transpose()\n//=&gt; [[hola, adios], [pedro, juan], [cristobal, colon]]\n</code></pre>\n\n<p> ### Notice</p>\n\n<p> DIMENSIONS\n Paremeters dimensions must have the same dimensions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Array</span> : Array<div class='sub-desc'><p>with elements to transpose.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns a string with the union of the columns of different matrices.</p>\n</div></li></ul></div></div></div><div id='method-uniq' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-uniq' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-uniq' class='name expandable'>uniq</a>( <span class='pre'>Block</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Searches repeated items in an array and deletes them. ...</div><div class='long'><p>Searches repeated items in an array and deletes them.</p>\n\n<h3>Example</h3>\n\n<pre><code>a = [2, 1, 2, 1, 2, 2, 3, 1, 1]\na.uniq()\n// =&gt; [2, 1, 3]\n\na = [[2, 1], [2, 1, 2], [2, 3], [1, 1]]\na.uniq(function(element){\n         return element[0]\n       })\n// =&gt; [[2, 1], [1, 1]]*\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Block</span> : function(Object)<div class='sub-desc'><p>indicates the position of the element to compare</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns an array without repeated items</p>\n</div></li></ul></div></div></div><div id='method-uniqS-B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-uniqS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-uniqS-B' class='name expandable'>uniq$B</a>( <span class='pre'></span> ) : <a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Bang methods ...$B operates in this object. ...</div><div class='long'><p>Bang methods ...$B operates in <code>this</code> object.</p>\n\n<p>Operates as Array#uniq except when no repetitions are found (returns null).\n(see Array#uniq)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.CoreExt.Array\" rel=\"Kernel.CoreExt.Array\" class=\"docClass\">Kernel.CoreExt.Array</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-unpack' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-unpack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-unpack' class='name expandable'>unpack</a>( <span class='pre'>model, array, level</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Unnest arrays till the given nested level. ...</div><div class='long'><p>Unnest arrays till the given nested level. Used for Array#flatten.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : Object<div class='sub-desc'><p>String or Array or any given object to use [] on.</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>Array to push results in.</p>\n</div></li><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>Depth.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Returns array.</p>\n</div></li></ul></div></div></div><div id='method-unshift' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.JSNative.Array' rel='Kernel.JSNative.Array' class='defined-in docClass'>Kernel.JSNative.Array</a><br/><a href='source/Array-doc.html#Kernel-JSNative-Array-method-unshift' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.JSNative.Array-method-unshift' class='name expandable'>unshift</a>( <span class='pre'>elements</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds one or more elements to the front of an array and returns the new length of the array. ...</div><div class='long'><p>Adds one or more elements to the front of an array and returns the new length of the array.</p>\n\n<p>The <code>unshift</code> method inserts the given values to the beginning of an array-like object.</p>\n\n<p><code>unshift</code> is intentionally generic; this method can be called or applied to objects resembling\narrays. Objects which do not contain a <code>length</code> property reflecting the last in a series of\nconsecutive, zero-based numerical properties may not behave in any meaningful manner.</p>\n\n<p>The following code displays the myFish array before and after adding elements to it.</p>\n\n<pre><code>// assumes a println function exists\nmyFish = [\"angel\", \"clown\"];\nprintln(\"myFish before: \" + myFish);\nunshifted = myFish.unshift(\"drum\", \"lion\");\nprintln(\"myFish after: \" + myFish);\nprintln(\"New length: \" + unshifted);\n</code></pre>\n\n<p>This example displays the following:</p>\n\n<pre><code>myFish before: [\"angel\", \"clown\"]\nmyFish after: [\"drum\", \"lion\", \"angel\", \"clown\"]\nNew length: 4\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elements</span> : Object...<div class='sub-desc'><p>The elements to add to the front of the array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The array's new length.</p>\n</div></li></ul></div></div></div><div id='method-values_at' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-values_at' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-values_at' class='name expandable'>values_at</a>( <span class='pre'>Index</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of an index passed as parameter. ...</div><div class='long'><p>Returns the value of an index passed as parameter.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [1,2,3,4]\na.values_at(1,2)\n//=&gt; [1,2]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Index</span> : number<div class='sub-desc'><p>to be selected</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>New array with values of selected index.</p>\n</div></li></ul></div></div></div><div id='method-zip' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Kernel.CoreExt.Array' rel='Kernel.CoreExt.Array' class='defined-in docClass'>Kernel.CoreExt.Array</a><br/><a href='source/ll_Array.html#Kernel-CoreExt-Array-method-zip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Array-method-zip' class='name expandable'>zip</a>( <span class='pre'>Arrays</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes the elements of two or more arrays passed as parameter and\ncopies their content in a single array. ...</div><div class='long'><p>Takes the elements of two or more arrays passed as parameter and\ncopies their content in a single array.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = [1,2]\nvar b = [3,4]\na.zip(b)\n//=&gt; [[1,2],[3,4]]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Arrays</span> : Array<div class='sub-desc'><p>to be joined.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>Array with all elements from the other arrays.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});