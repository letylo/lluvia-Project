Ext.data.JsonP.Kernel_Foundation_Architecture_Module({"tagname":"class","name":"Kernel.Foundation.Architecture.Module","autodetected":{},"files":[{"filename":"ll_Module.js","href":"ll_Module.html#Kernel-Foundation-Architecture-Module"}],"members":[{"name":"constructor","tagname":"method","owner":"Kernel.Foundation.Architecture.Module","id":"method-constructor","meta":{}},{"name":"alias_method","tagname":"method","owner":"Kernel.Foundation.Architecture.Module","id":"method-alias_method","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.Foundation.Architecture.Module","component":false,"superclasses":[],"subclasses":["Kernel.Foundation.Architecture.Class"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Kernel.Foundation.Architecture.Class' rel='Kernel.Foundation.Architecture.Class' class='docClass'>Kernel.Foundation.Architecture.Class</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_Module.html#Kernel-Foundation-Architecture-Module' target='_blank'>ll_Module.js</a></div></pre><div class='doc-contents'><p>Module class</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Architecture.Module'>Kernel.Foundation.Architecture.Module</span><br/><a href='source/ll_Module.html#Kernel-Foundation-Architecture-Module-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Kernel.Foundation.Architecture.Module-method-constructor' class='name expandable'>Kernel.Foundation.Architecture.Module</a>( <span class='pre'>module_name, block</span> ) : <a href=\"#!/api/Kernel.Foundation.Architecture.Module\" rel=\"Kernel.Foundation.Architecture.Module\" class=\"docClass\">Kernel.Foundation.Architecture.Module</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>module_name</span> : String<div class='sub-desc'><p>Name of the module</p>\n</div></li><li><span class='pre'>block</span> : Function<div class='sub-desc'><p>Configuration Block</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.Foundation.Architecture.Module\" rel=\"Kernel.Foundation.Architecture.Module\" class=\"docClass\">Kernel.Foundation.Architecture.Module</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-alias_method' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Architecture.Module'>Kernel.Foundation.Architecture.Module</span><br/><a href='source/ll_Module.html#Kernel-Foundation-Architecture-Module-method-alias_method' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Architecture.Module-method-alias_method' class='name expandable'>alias_method</a>( <span class='pre'>new_name, old_name</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a copy of the old name function with the new name. ...</div><div class='long'><p>Creates a copy of the old name function with the new name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>new_name</span> : string | Function<div class='sub-desc'>\n</div></li><li><span class='pre'>old_name</span> : string<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>returns a reference to the newly created function.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});