Ext.data.JsonP.Kernel_Foundation_Enumerable_Enumeration({"tagname":"class","name":"Kernel.Foundation.Enumerable.Enumeration","autodetected":{},"files":[{"filename":"ll_Enumeration.js","href":"ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration"}],"members":[{"name":"constructor","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-constructor","meta":{}},{"name":"each","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-each","meta":{}},{"name":"transpose","tagname":"method","owner":"Kernel.Foundation.Enumerable.Enumeration","id":"method-transpose","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.Foundation.Enumerable.Enumeration","short_doc":"Creates several symbolic constants\n\nExample:\n\nSuit = new Enumeration(\"spades\", \"hearts\", \"diamonds\", \"clovers\")\n// { ...","component":false,"superclasses":[],"subclasses":["Kernel.Foundation.Enumerable.EnumerationOf"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Kernel.Foundation.Enumerable.EnumerationOf' rel='Kernel.Foundation.Enumerable.EnumerationOf' class='docClass'>Kernel.Foundation.Enumerable.EnumerationOf</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration' target='_blank'>ll_Enumeration.js</a></div></pre><div class='doc-contents'><p>Creates several symbolic constants</p>\n\n<h3>Example:</h3>\n\n<pre><code>Suit = new Enumeration(\"spades\", \"hearts\", \"diamonds\", \"clovers\")\n// { spades: 0, hearts: 1, diamonds: 2, clovers: 3}\n\nSuit.hearts == 1\n// =&gt; true\n\nvar a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\nObject.keys(a.hearts)\n// =&gt; red,black\n\na.hearts\n// =&gt; 1\n\na.hearts.red\n// =&gt; 1\n</code></pre>\n\n<p>Attributes, as a.hearts, are holding\n<a href=\"#!/api/Kernel.Foundation.DataType.VersionNumber\" rel=\"Kernel.Foundation.DataType.VersionNumber\" class=\"docClass\">VersionNumber</a> objects.</p>\n\n<h3>Inner Structure</h3>\n\n<pre><code>{\n  \"spades\": 0,\n  \"hearts\": { 1,\n               \"red\": 1,\n               \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n}\n</code></pre>\n\n<h3>Sugar</h3>\n\n<p> Despite,</p>\n\n<pre><code>a.hearts.black == 2\n//=&gt; true\n</code></pre>\n\n<p>when stringifying,</p>\n\n<pre><code>a.hearts.black.toString()\n//=&gt; \"1.2\"\n</code></pre>\n\n<p>due to <a href=\"#!/api/Kernel.Foundation.DataType.VersionNumber\" rel=\"Kernel.Foundation.DataType.VersionNumber\" class=\"docClass\">VersionNumber</a> properties.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.Enumeration'>Kernel.Foundation.Enumerable.Enumeration</span><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-constructor' class='name expandable'>Kernel.Foundation.Enumerable.Enumeration</a>( <span class='pre'>constants</span> ) : <a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration\" rel=\"Kernel.Foundation.Enumerable.Enumeration\" class=\"docClass\">Kernel.Foundation.Enumerable.Enumeration</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Create a list of constant given an\nInterleavedArray\n\nExample\n\nvar a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"b...</div><div class='long'><p>Create a list of constant given an\n<a href=\"#!/api/Kernel.Foundation.Enumerable.InterleavedArray\" rel=\"Kernel.Foundation.Enumerable.InterleavedArray\" class=\"docClass\">InterleavedArray</a></p>\n\n<h3>Example</h3>\n\n<pre><code>var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>constants</span> : String...<div class='sub-desc'><p>List of constants to be used as an InterleavedArray.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Kernel.Foundation.Enumerable.Enumeration\" rel=\"Kernel.Foundation.Enumerable.Enumeration\" class=\"docClass\">Kernel.Foundation.Enumerable.Enumeration</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.Enumeration'>Kernel.Foundation.Enumerable.Enumeration</span><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-each' class='name expandable'>each</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterates over key-value pairs inside the enumeration. ...</div><div class='long'><p>Iterates over key-value pairs inside the enumeration.</p>\n\n<h3>Example</h3>\n\n<p>  Let a be defined as</p>\n\n<pre><code>var a = new Enumeration(\"spades\", \"hearts\", [ \"red\", \"black\"], \"diamonds\", \"clovers\")\n</code></pre>\n\n<p> with the following inner structure:</p>\n\n<pre><code>   {\n  \"spades\": 0,\n  \"hearts\": { 1,\n              \"red\": 1,\n              \"black\": 2\n             },\n   \"diamonds\": 2,\n   \"clovers\": 3\n   }\n</code></pre>\n\n<p>  When called</p>\n\n<pre><code>a.each(function(key, value) {;})\n</code></pre>\n\n<p>key-value pairs will be:</p>\n\n<table>\n<thead>\n<tr>\n<th> key      </th>\n<th style=\"text-align:right;\"> value  </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> spades   </td>\n<td style=\"text-align:right;\"> 0      </td>\n</tr>\n<tr>\n<td> hearts   </td>\n<td style=\"text-align:right;\"> 1      </td>\n</tr>\n<tr>\n<td> red      </td>\n<td style=\"text-align:right;\"> 1.1    </td>\n</tr>\n<tr>\n<td> black    </td>\n<td style=\"text-align:right;\"> 1.2    </td>\n</tr>\n<tr>\n<td> diamonds </td>\n<td style=\"text-align:right;\"> 2      </td>\n</tr>\n<tr>\n<td> clovers  </td>\n<td style=\"text-align:right;\"> 3      </td>\n</tr>\n</tbody>\n</table>\n\n</div></div></div><div id='method-transpose' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.Foundation.Enumerable.Enumeration'>Kernel.Foundation.Enumerable.Enumeration</span><br/><a href='source/ll_Enumeration.html#Kernel-Foundation-Enumerable-Enumeration-method-transpose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.Foundation.Enumerable.Enumeration-method-transpose' class='name expandable'>transpose</a>( <span class='pre'>[Type]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes an InterleavedArray and inverts it, due to InterleavedArray and Enumeration reciprocity. ...</div><div class='long'><p>Takes an InterleavedArray and inverts it, due to InterleavedArray and Enumeration reciprocity.\nNot enumerable, not configurable, not writable.</p>\n\n<p>Given the following InterleavedArray,</p>\n\n<pre><code>   {\n   \"0\": \"spades\",\n   \"1\": \"hearts\",\n   \"1.1\": \"red\",\n   \"1.2\": \"black\",\n   \"2\": \"diamonds\",\n   \"3\": \"clovers\"\n  }\n</code></pre>\n\n<p>will be turned inside this into:\n        {\n      \"spades\": 0,\n      \"hearts\": { 1,\n                  \"red\": 1.1,\n                  \"black\": 1.2\n                 },\n       \"diamonds\": 2,\n       \"clovers\": 3\n       }</p>\n\n<p> through this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Type</span> : Class (optional)<div class='sub-desc'><p>Class for assigning values</p>\n<p>Defaults to: <code>VersionNumber</code></p></div></li></ul></div></div></div></div></div></div></div>","meta":{}});