Ext.data.JsonP.Kernel_CoreExt_Function({"tagname":"class","name":"Kernel.CoreExt.Function","autodetected":{},"files":[{"filename":"ll_Function.js","href":"ll_Function.html#Kernel-CoreExt-Function"}],"members":[{"name":"reflect","tagname":"method","owner":"Kernel.CoreExt.Function","id":"method-reflect","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.CoreExt.Function","component":false,"superclasses":[],"subclasses":[],"mixedInto":["Kernel.JSNative.Function"],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Kernel.JSNative.Function' rel='Kernel.JSNative.Function' class='docClass'>Kernel.JSNative.Function</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_Function.html#Kernel-CoreExt-Function' target='_blank'>ll_Function.js</a></div></pre><div class='doc-contents'><p>Extends JavaScript native Function</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-reflect' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Function'>Kernel.CoreExt.Function</span><br/><a href='source/ll_Function.html#Kernel-CoreExt-Function-method-reflect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Function-method-reflect' class='name expandable'>reflect</a>( <span class='pre'>original_method</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a bang method version of the referred one. ...</div><div class='long'><p>Creates a bang method version of the referred one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>original_method</span> : (String | String[])...<div class='sub-desc'><p>Name of the original method.</p>\n\n<p>If original method is an Array of Strings then performs reflection\nover every mentioned method.</p>\n\n<h3>Example</h3>\n\n<pre><code> // Create Array#map$B based on Array#map\n Array.reflect(\"map\")\n\n // Create Array#map$B and Array#collect$B\n Array.reflect(\"map\", \"collect\")\n\n // Create Array#map$B and Array#collect$B\n var method_list = [\"map\", \"collect\"]\n Array.reflect(method_list)\n</code></pre>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});