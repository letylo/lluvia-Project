Ext.data.JsonP.Kernel_CoreExt_Object({"tagname":"class","name":"Kernel.CoreExt.Object","autodetected":{},"files":[{"filename":"ll_Object.js","href":"ll_Object.html#Kernel-CoreExt-Object"}],"members":[{"name":"_$innerObject","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-_S-innerObject","meta":{}},{"name":"alias","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-alias","meta":{}},{"name":"clone","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-clone","meta":{}},{"name":"eql$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-eqlS-U","meta":{}},{"name":"equals","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-equals","meta":{}},{"name":"freeze","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-freeze","meta":{"deprecated":{"text":"<p>Mark an object as frozen.</p>\n"}}},{"name":"frozen$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-frozenS-U","meta":{"deprecated":{"text":"<p>Frozen predicate</p>\n"}}},{"name":"identic","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-identic","meta":{}},{"name":"implement","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-implement","meta":{}},{"name":"inspect","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-inspect","meta":{}},{"name":"instance_of$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-instance_ofS-U","meta":{}},{"name":"is_a$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-is_aS-U","meta":{}},{"name":"keys","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-keys","meta":{}},{"name":"kind_of$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-kind_ofS-U","meta":{}},{"name":"merge","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-merge","meta":{}},{"name":"merge$B","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-mergeS-B","meta":{}},{"name":"method_missing","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-method_missing","meta":{}},{"name":"override","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-override","meta":{}},{"name":"override$B","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-overrideS-B","meta":{}},{"name":"own_keys","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-own_keys","meta":{}},{"name":"reflect","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-reflect","meta":{}},{"name":"respond_to","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-respond_to","meta":{}},{"name":"respond_to$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-respond_toS-U","meta":{}},{"name":"self_keys","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-self_keys","meta":{}},{"name":"soft_merge","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-soft_merge","meta":{}},{"name":"soft_merge$B","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-soft_mergeS-B","meta":{}},{"name":"stop_enumeratng","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-stop_enumeratng","meta":{}},{"name":"taint","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-taint","meta":{}},{"name":"tainted$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-taintedS-U","meta":{}},{"name":"to_a","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-to_a","meta":{}},{"name":"to_s","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-to_s","meta":{}},{"name":"to_str","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-to_str","meta":{}},{"name":"trust","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-trust","meta":{}},{"name":"untaint","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-untaint","meta":{}},{"name":"untrust","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-untrust","meta":{}},{"name":"untrusted$U","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-untrustedS-U","meta":{}},{"name":"value_of","tagname":"method","owner":"Kernel.CoreExt.Object","id":"method-value_of","meta":{}},{"name":"rip_array","tagname":"method","owner":"Kernel.CoreExt.Object","id":"static-method-rip_array","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Kernel.CoreExt.Object","short_doc":"Extends Javascript Native Object class. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":["Kernel.JSNative.Object"],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Kernel.JSNative.Object' rel='Kernel.JSNative.Object' class='docClass'>Kernel.JSNative.Object</a></div><h4>Files</h4><div class='dependency'><a href='source/ll_Object.html#Kernel-CoreExt-Object' target='_blank'>ll_Object.js</a></div></pre><div class='doc-contents'><p>Extends Javascript Native Object class.</p>\n\n<p> Note: Extending Object's prototype will address you\n to the hub of hell (hellHub) in programmer's\n collective mind, but freedom is the rider of\n love. Bear it in your mind and practice:</p>\n\n<pre><code> Object.defineProperty(this, \"nonEnum\", {\n         enumerable: false,\n         value: 'noEnum'\n });\n</code></pre>\n\n<p> as much as you can.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-_S-innerObject' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-_S-innerObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-_S-innerObject' class='name expandable'>_$innerObject</a>( <span class='pre'>that, parentName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Class augmentation. ...</div><div class='long'><p>Class augmentation. Creates a constructor based on another. This let us\nto add extra attributes.</p>\n\n<h3>Example</h3>\n\n<p>Godman inherits from Device</p>\n\n<p> Godman calls the Device contructor that executes:</p>\n\n<pre><code> this.openDevice    = _$innerObject(this, \"device\")\n</code></pre>\n\n<p> So for _$innerObject:\n     me = that = Godman device object\n     parentName = device</p>\n\n<p> Anywhere inside person we can read:</p>\n\n<pre><code> var AHuman = this.openDevice(Human)\n var person = new AHuman(name)\n</code></pre>\n\n<p> openDevice returns an anonymous function that redirects all its calls\n to Human (the innerObject) but this function (used as a constructor)\n appends this.device = Godman through:</p>\n\n<pre><code> this[parentName] = me\n</code></pre>\n\n<p>The price to be paid in exchange for this benefit is that:</p>\n\n<p>   AHuman instanceof Human == false</p>\n\n<p>So to fix this</p>\n\n<pre><code>$F_innerObj.prototype = new arguments[0]\n$F_innerObj.prototype.constructor = arguments[0]\n</code></pre>\n\n<p>is added. Now\n   AHuman instanceof Human == true</p>\n\n<p>   todo: One single property is taken into account now. A better design\n   will accept an outer object like this: _$innerObject({device: Godman, other_key: value})</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>that</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>parentName</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-alias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-alias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-alias' class='name expandable'>alias</a>( <span class='pre'>alias_name, original_method</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a reference to an original method. ...</div><div class='long'><p>Creates a reference to an original method. Changing\nthe original one behavior, the alias is also changing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias_name</span> : string<div class='sub-desc'><p>Name of the new method.</p>\n</div></li><li><span class='pre'>original_method</span> : string<div class='sub-desc'><p>Name of the original method.</p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Shallow copy of an object. ...</div><div class='long'><p>Shallow copy of an object.</p>\n\n<h1>Example</h1>\n\n<pre><code>var me = new Person()\nvar one = {first: 1, second: me }\nvar two = one.clone()\n// =&gt; { first: 1, second: me }\n</code></pre>\n\n<p>Notice that changing two.second affects one.second as long as they're\npointers to the same object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Shallow copy of the given object.</p>\n</div></li></ul></div></div></div><div id='method-eqlS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-eqlS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-eqlS-U' class='name expandable'>eql$U</a>( <span class='pre'>model</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares two objects. ...</div><div class='long'><p>Compares two objects. Returns true when Object#toSource() is the same on both\nobjects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-equals' class='name expandable'>equals</a>( <span class='pre'>model</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias of == ...</div><div class='long'><p>Alias of ==</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-freeze' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-freeze' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-freeze' class='name expandable'>freeze</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        <p>Mark an object as frozen.</p>\n\n        </div>\n</div></div></div><div id='method-frozenS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-frozenS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-frozenS-U' class='name expandable'>frozen$U</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        <p>Frozen predicate</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-identic' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-identic' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-identic' class='name expandable'>identic</a>( <span class='pre'>model</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the best representation of two objects are identical. ...</div><div class='long'><p>Check if the best representation of two objects are identical.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-implement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-implement' class='name expandable'>implement</a>( <span class='pre'>iface, obj</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines all the interface mentods in a object ...</div><div class='long'><p>Defines all the interface mentods in a object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iface</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-inspect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-inspect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-inspect' class='name expandable'>inspect</a>( <span class='pre'>sp</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Shows an object pretty printed. ...</div><div class='long'><p>Shows an object pretty printed. Is an improved version of toSource()</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sp</span> : Array<div class='sub-desc'><p>Used to add information recursively by calling Object#inspect on inner elements.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-instance_ofS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-instance_ofS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-instance_ofS-U' class='name expandable'>instance_of$U</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Object#is_a$U alias. ...</div><div class='long'><p>Object#is_a$U alias.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-is_aS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-is_aS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-is_aS-U' class='name expandable'>is_a$U</a>( <span class='pre'>clss</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if an object is descendant of a class\n\nExample\n\nImagine that line inhetits from Shape. ...</div><div class='long'><p>Check if an object is descendant of a class</p>\n\n<h3>Example</h3>\n\n<p>Imagine that line inhetits from Shape.</p>\n\n<pre><code>var l = new Line()\nl.is_a$U(Shape)\n// =&gt; true\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clss</span> : Function<div class='sub-desc'><p>Class to check belonging</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-keys' class='name expandable'>keys</a>( <span class='pre'>re</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Yields all the accesible attributes of an object. ...</div><div class='long'><p>Yields all the accesible attributes of an object.</p>\n\n<h3>Example</h3>\n\n<p>   function Arachnid() {\n      this.limbs = 8\n      this.lips  = false\n      this.lap   = true\n   }</p>\n\n<p>   Tarantula.prototype = new Arachnid\n   Tarantula.prototype.constructor = Tarantula\n   function Tarantula() {\n      this.poisson = true\n   }</p>\n\n<p>   var venom = new Tarantula()\n   venom.keys()\n   // => [\"poisson\", \"lap\", \"lips\", \"limbs\"]</p>\n\n<p>A regular expression is accepted to filter output.</p>\n\n<h3>Example</h3>\n\n<pre><code>venom.keys(/^l.*s$/)\n// =&gt; [\"lips\", \"limbs\"]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>re</span> : RegExp<div class='sub-desc'><p>A regular expression to filter output.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>An array with the keys of the object.</p>\n</div></li></ul></div></div></div><div id='method-kind_ofS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-kind_ofS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-kind_ofS-U' class='name expandable'>kind_of$U</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Object#is_a$U alias. ...</div><div class='long'><p>Object#is_a$U alias.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-merge' class='name expandable'>merge</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Merges all the self keys of an object source whith this. ...</div><div class='long'><p>Merges all the self keys of an object <em>source</em> whith this.\nThis method is actually a bang method. Further discussion is needed.</p>\n\n<p>Shall we merge only self keys?\nAren't self_keys part of a behaviour to enjail in Hash?\nShall we clone objects?</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-mergeS-B' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-mergeS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-mergeS-B' class='name expandable'>merge$B</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>See Object#merge ...</div><div class='long'><p>See Object#merge</p>\n</div></div></div><div id='method-method_missing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-method_missing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-method_missing' class='name expandable'>method_missing</a>( <span class='pre'>method, obj, params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Automatically called whenever a non existing method is called\nin an object. ...</div><div class='long'><p>Automatically called whenever a non existing method is called\nin an object. Provides boilerplate getter and setters.</p>\n\n<h3>Example</h3>\n\n<pre><code> function N(){\n    this.a = 2;\n }\n\n n = new N()\n n.set_a(3)\n n.get_a()\n //=&gt; 3\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : string<div class='sub-desc'><p>Method name</p>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>Scope of the method call</p>\n</div></li><li><span class='pre'>params</span> : Array<div class='sub-desc'><p>List of params of the method call</p>\n</div></li></ul></div></div></div><div id='method-override' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-override' class='name expandable'>override</a>( <span class='pre'>source</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Works as Object#merge but cannot augment this object. ...</div><div class='long'><p>Works as Object#merge but cannot augment this object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Object to read from.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-overrideS-B' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-overrideS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-overrideS-B' class='name expandable'>override$B</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>See Object#override ...</div><div class='long'><p>See Object#override</p>\n</div></div></div><div id='method-own_keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-own_keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-own_keys' class='name expandable'>own_keys</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias of Object#self_keys ...</div><div class='long'><p>Alias of Object#self_keys</p>\n</div></div></div><div id='method-reflect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-reflect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-reflect' class='name expandable'>reflect</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a bang version of a given method. ...</div><div class='long'><p>Creates a bang version of a given method. It reflects the response changes over\nthe <em>this</em> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-respond_to' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-respond_to' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-respond_to' class='name expandable'>respond_to</a>( <span class='pre'>function_name</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks for the existence of a method. ...</div><div class='long'><p>Checks for the existence of a method. Use it\nfor Duck typing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>function_name</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-respond_toS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-respond_toS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-respond_toS-U' class='name expandable'>respond_to$U</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias of Object#respond_to ...</div><div class='long'><p>Alias of Object#respond_to</p>\n</div></div></div><div id='method-self_keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-self_keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-self_keys' class='name expandable'>self_keys</a>( <span class='pre'>re</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the attributes defined in this object. ...</div><div class='long'><p>Return the attributes defined in this object. This method excludes further seeking via\nthe prototype chain. See Object#keys for usage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>re</span> : RegExp<div class='sub-desc'><p>A Regular Expression to filter output.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-soft_merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-soft_merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-soft_merge' class='name expandable'>soft_merge</a>( <span class='pre'>source</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Works as Object#merge, but source can not override already\nexisting keys. ...</div><div class='long'><p>Works as Object#merge, but source can not override already\nexisting keys.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>Object to read from.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-soft_mergeS-B' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-soft_mergeS-B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-soft_mergeS-B' class='name expandable'>soft_merge$B</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>See Object#soft_merge ...</div><div class='long'><p>See Object#soft_merge</p>\n</div></div></div><div id='method-stop_enumeratng' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-stop_enumeratng' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-stop_enumeratng' class='name expandable'>stop_enumeratng</a>( <span class='pre'>methods</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Make a property not enumerable. ...</div><div class='long'><p>Make a property not enumerable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>methods</span> : String | Array <div class='sub-desc'><p>List of methods/properties to be hidden.</p>\n</div></li></ul></div></div></div><div id='method-taint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-taint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-taint' class='name expandable'>taint</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks an object as tainted. ...</div><div class='long'><p>Marks an object as tainted.</p>\n</div></div></div><div id='method-taintedS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-taintedS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-taintedS-U' class='name expandable'>tainted$U</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>tainted predicate. ...</div><div class='long'><p>tainted predicate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-to_a' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-to_a' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-to_a' class='name expandable'>to_a</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this object inside an array. ...</div><div class='long'><p>Returns this object inside an array.</p>\n\n<h2>Example</h2>\n\n<p>   var a = { name: \"superman\" }\n   a.to_a()\n   // => [{ name: \"superman\" }]</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-to_s' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-to_s' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-to_s' class='name expandable'>to_s</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Object#toString alias ...</div><div class='long'><p>Object#toString alias</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-to_str' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-to_str' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-to_str' class='name expandable'>to_str</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Object#to_s alias. ...</div><div class='long'><p>Object#to_s alias.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-trust' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-trust' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-trust' class='name expandable'>trust</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set an object as trustable. ...</div><div class='long'><p>Set an object as trustable.</p>\n</div></div></div><div id='method-untaint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-untaint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-untaint' class='name expandable'>untaint</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the tainted mark from an object. ...</div><div class='long'><p>Removes the tainted mark from an object.</p>\n</div></div></div><div id='method-untrust' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-untrust' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-untrust' class='name expandable'>untrust</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark an object as untrustable. ...</div><div class='long'><p>Mark an object as untrustable.</p>\n</div></div></div><div id='method-untrustedS-U' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-untrustedS-U' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-untrustedS-U' class='name expandable'>untrusted$U</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>trustable predicate. ...</div><div class='long'><p>trustable predicate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-value_of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-method-value_of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-method-value_of' class='name expandable'>value_of</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the inner value of an object whenever is possible. ...</div><div class='long'><p>Gets the inner value of an object whenever is possible.  If not a\nObject#toSource() representation is taken.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Best representation for an object.</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-rip_array' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kernel.CoreExt.Object'>Kernel.CoreExt.Object</span><br/><a href='source/ll_Object.html#Kernel-CoreExt-Object-static-method-rip_array' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kernel.CoreExt.Object-static-method-rip_array' class='name expandable'>rip_array</a>( <span class='pre'>object</span> ) : Array<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Creates a new Array extracting the integer keys of an object. ...</div><div class='long'><p>Creates a new Array extracting the integer keys of an object.</p>\n\n<h3>Example</h3>\n\n<pre><code>var a = {\n    name: \"John\",\n    1: \"first son\",\n    2: \"daughter\"\n}\n\nvar b = Array.rip_array(a)\n//=&gt; [undefined, \"first son\", \"daughter\"]\n</code></pre>\n\n<p>Even though Array.rip_array would be a better design, Array is not extensible.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>Model to rip numeric keys from.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>New Array</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});